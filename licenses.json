{
    "@freakycoder/react-native-bounceable@1.0.3": {
        "licenses": "MIT",
        "repository": "https://github.com/WrathChaos/react-native-bounceable",
        "publisher": "FreakyCoder",
        "email": "kurayogun@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@freakycoder/react-native-bounceable",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@freakycoder/react-native-bounceable/README.md",
        "licenseText": "<img alt=\"React Native Bounceable\" src=\"assets/logo.png\" width=\"1050\"/>\n\n[![Battle Tested ‚úÖ](https://img.shields.io/badge/-Battle--Tested%20%E2%9C%85-03666e?style=for-the-badge)](https://github.com/WrathChaos/react-native-bounceable)\n\n[![Animate and bounce any component with RNBounceable for React Native](https://img.shields.io/badge/-Animate%20and%20bounce%20any%20component%20with%20RNBounceable%20for%20React%20Native-orange?style=for-the-badge)](https://github.com/WrathChaos/react-native-bounceable)\n\n[![npm version](https://img.shields.io/npm/v/@freakycoder/react-native-bounceable.svg?style=for-the-badge)](https://www.npmjs.com/package/@freakycoder/react-native-bounceable)\n[![npm](https://img.shields.io/npm/dt/@freakycoder/react-native-bounceable.svg?style=for-the-badge)](https://www.npmjs.com/package/@freakycoder/react-native-bounceable)\n![Platform - Android and iOS](https://img.shields.io/badge/platform-Android%20%7C%20iOS-blue.svg?style=for-the-badge)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg?style=for-the-badge)](https://opensource.org/licenses/MIT)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg?style=for-the-badge)](https://github.com/prettier/prettier)\n\n<p align=\"center\">\n  <img alt=\"React Native Bounceable\"\n        src=\"assets/react-native-bounceable.gif\" />\n</p>\n\n# Version 1 üöÄ\n\nFinally we're published the `version 1` for the bounceable library\n- Much better animation with `pressIn` and `pressOut` bounces üòç\n- More than 90k downloads and battle tested üí™\n\n# Installation\n\nAdd the dependency:\n\n```bash\nnpm i @freakycoder/react-native-bounceable\n```\n\n# Usage\n\n## Import\n\n```jsx\nimport RNBounceable from \"@freakycoder/react-native-bounceable\";\n```\n\n## Fundamental Usage\n\nYou can put **ANY children component** inside the **RNBounceable** component, it will make it bounce when it is pressed\n\n```jsx\n<RNBounceable onPress={() => {}}>\n  <View style={styles.bounceButtonStyle}>\n    <Text style={styles.bounceButtonTextStyle}>Bounce</Text>\n  </View>\n</RNBounceable>\n```\n\n# Configuration - Props\n\n| Property        |   Type   |  Default  | Description                                      |\n| --------------- | :------: | :-------: | ------------------------------------------------ |\n| onPress         | function | undefined | set your own logic for the onPress functionality |\n| style           |  style   | undefined | set the style like any other View container      |\n| bounceEffect    |  number  |    0.9    | change the bounce effect's value                 |\n| bounceFriction  |  number  |     3     | change the bounce effect's friction value        |\n| useNativeDriver | boolean  |   true    | change the useNativeDriver's usage               |\n| animate         | function |  default  | activate the bounce effect animation             |\n\n## Future Plans\n\n- [x] ~~LICENSE~~\n- [x] ~~More customizable animation props~~\n- [ ] Write an article about the lib on Medium\n\n## Author\n\nFreakyCoder, kurayogun@gmail.com\n\n## License\n\nReact Native Bounceable is available under the MIT license. See the LICENSE file for more info.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@gorhom/bottom-sheet@4.4.5": {
        "licenses": "MIT",
        "repository": "https://github.com/gorhom/react-native-bottom-sheet",
        "publisher": "Mo Gorhom",
        "url": "https://gorhom.dev",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@gorhom/bottom-sheet",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@gorhom/bottom-sheet/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2020 Mo Gorhom\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2020 Mo Gorhom",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@invertase/react-native-apple-authentication@2.2.2": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/react-native-apple-authentication",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@invertase/react-native-apple-authentication",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@invertase/react-native-apple-authentication/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/",
        "copyright": "Copyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@native-html/iframe-plugin@2.6.1": {
        "licenses": "MIT",
        "repository": "https://github.com/native-html/plugins",
        "publisher": "Jules Sam. Randolph",
        "email": "jules.sam.randolph@gmail.com",
        "url": "https://github.com/jsamr",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@native-html/iframe-plugin",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@native-html/iframe-plugin/README.md",
        "licenseText": "> :warning: This documentation is for **react-native-render-html v6** (@native-html/iframe-plugin@2.x). For v5, [go here](https://github.com/native-html/plugins/tree/rnrh/5.x/packages/iframe-plugin#readme).\n\n<h1 align=\"center\">@native-html/iframe-plugin</h1>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@native-html/iframe-plugin\"\n    ><img\n      src=\"https://img.shields.io/npm/v/@native-html/iframe-plugin\"\n      alt=\"npm\"\n  /></a>\n  <a href=\"https://semver.org/spec/v2.0.0.html\"\n    ><img\n      src=\"https://img.shields.io/badge/semver-2.0.0-e10079.svg\"\n      alt=\"semver\"\n  /></a>\n  <a href=\"https://codecov.io/gh/native-html/plugins?flag=iframe-plugin\"\n    ><img\n      src=\"https://codecov.io/gh/native-html/plugins/branch/master/graph/badge.svg?flag=iframe-plugin\"\n      alt=\"codecov\"\n  /></a>\n  <a\n    href=\"https://github.com/native-html/plugin/actions?query=branch%3Amaster+workflow%3Aiframe\"\n    ><img\n      src=\"https://github.com/native-html/plugins/workflows/iframe/badge.svg?branch=master\"\n      alt=\"CI\"\n  /></a>\n  <a href=\"https://discord.gg/3B9twTMEzb\">\n    <img\n    src=\"https://img.shields.io/discord/736906960041148476?label=discord\"\n    alt=\"Discord\"\n  />\n</a>\n</p>\n\n<p align=\"center\">\n  üåê A WebView-based plugin to render iframes in react-native-render-html.\n</p>\n\n<p align=\"center\">\n  <img\n    src=\"https://github.com/native-html/plugins/raw/master/images/expo-example.png\"\n  />\n</p>\n<div align=\"center\">\n  <a href=\"https://expo.io/@jsamr/projects/native-html-plugins-examples\"\n    >Try it on Expo!</a\n  >\n</div>\n\n<hr/>\n\n**Install**:\n\n> :warning: With expo, use `expo install` instead to grab a compatible\n> `react-native-webview` version.\n\n```sh\nnpm add --save @native-html/iframe-plugin react-native-webview\n```\n\n```sh\nyarn add @native-html/iframe-plugin react-native-webview\n```\n\n**Features**:\n\n- Supports `onLinkPress`;\n- Supports `defaultWebViewProps`;\n- Compliance with [RFC001](https://github.com/meliorence/react-native-render-html/blob/master/rfc/001-A-deterministic-approach-to-embedded-content-scaling.adoc#L13): scales to available width;\n- Autoscale feature (adapt zoom level to available width! Disabled by default.);\n- A single renderer component exported as default, super easy to plug-in!\n- Compatible with `react-native-web` via [`@formidable-webview/web`](https://github.com/formidable-webview/ubiquitous/tree/master/packages/web#readme)\n\n**Known Limitations**:\n\n- With `react-native-web`, `onLinkPress` will not work for external domains.\n\n## Compat Table\n\n| react-native-render-html | @native-html/iframe-plugin                                                                                |\n| ------------------------ | --------------------------------------------------------------------------------------------------------- |\n| ‚â• 5.0.0 &lt; 6.0.0       | 1.x ([documentation](https://github.com/native-html/plugins/tree/rnrh/5.x/packages/iframe-plugin#readme)) |\n| ‚â• 6.0.0                  | 2.x ([documentation](https://github.com/native-html/plugins/tree/rnrh/6.x/packages/iframe-plugin#readme)) |\n\n## Minimal working example\n\n```jsx\nimport IframeRenderer, { iframeModel } from '@native-html/iframe-plugin';\nimport RenderHTML from 'react-native-render-html';\nimport WebView from 'react-native-webview';\n\nconst renderers = {\n  iframe: IframeRenderer\n};\n\nconst customHTMLElementModels = {\n  iframe: iframeModel\n};\n\n// ...\n\n<RenderHTML\n  renderers={renderers}\n  WebView={WebView}\n  source={{ html: '<iframe ...></iframe>' }}\n  customHTMLElementModels={customHTMLElementModels}\n  defaultWebViewProps={\n    {\n      /* Any prop you want to pass to all WebViews */\n    }\n  }\n  renderersProps={{\n    iframe: {\n      scalesPageToFit: true,\n      webViewProps: {\n        /* Any prop you want to pass to iframe WebViews */\n      }\n    }\n  }}\n/>;\n```\n\n## Customizing\n\nTo customize the behavior of this renderer, you can pass a config object\nto the `renderersProps.iframe` prop of `RenderHTML` component.\n\nSee the documentation for this object here: [`IframeConfig`](docs/iframe-plugin.iframeconfig.md).\n\n## Zoom on the autoscale feature\n\nWhen `scalesPageToFit` is set to true, if the iframe width (as determined by the\n`width` element attribute) is greater than the available width (as determined\nby HTML props `contentWidth` and `computeEmbeddedMaxWidth`), the `WebView` will\nbe zoomed out by just the right amount to have no horizontal cropping. This is\nequivalent to `resizeMode: 'contain'` for images. See example below with\n`scalesPageToFit` enabled (left) and disabled (right):\n\n![](/blob/master/images/scalesPageToFit.jpg)\n\n## Providing headers\n\n```jsx\nimport IframeRenderer, { iframeModel } from '@native-html/iframe-plugin';\nimport RenderHTML from 'react-native-render-html';\nimport WebView from 'react-native-webview';\n\nconst renderers = {\n  iframe: IframeRenderer\n}\n\nconst customHTMLElementModels = {\n  iframe: iframeModel\n}\n\nfunction provideEmbeddedHeaders(uri, tagName) {\n  if (tagName === \"iframe\" && uri.startsWith(\"https://protected-domain.com\")) {\n    // Pass an authorization header to all iframes in protected-domain.com\n    return {\n      Authorization: \"Bearer XXXXXXXX\";\n    }\n  }\n}\n\n// ...\n\n<RenderHTML renderers={renderers}\n      WebView={WebView}\n      source={{ html: '<iframe width=\"400\" height=\"200\" src=\"https://protected-domain.com/user/cart?embedded\"></iframe>' }}\n      customHTMLElementModels={customHTMLElementModels}\n      provideEmbeddedHeaders={provideEmbeddedHeaders}\n/>\n\n```\n\n## Customizing the renderer\n\nYou can customize the renderer logic thanks to `useHtmlIframeProps` hook, `iframeModel` and `HTMLIframe` exports:\n\n```jsx\nimport {\n  useHtmlIframeProps,\n  HTMLIframe,\n  iframeModel\n} from '@native-html/iframe-plugin';\n\nconst IframeRenderer = function IframeRenderer(props) {\n  const iframeProps = useHtmlIframeProps(props);\n  // Do customize the props here; wrap with your own container...\n  return <HTMLIframe {...iframeProps} />;\n};\n\nconst renderers = {\n  iframe: IframeRenderer\n};\n\n// use \"renderers\" prop in your RenderHTML instance\n```\n\n## API Reference\n\nDocumentation for all exports of this library [is available here](docs/iframe-plugin.md).",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@notifee/react-native@7.6.1": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/notifee",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@notifee/react-native",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@notifee/react-native/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io>\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/\n\n\n\nNotifee CORE License\n--------------------\n\nThe Notifee \"core\" submodule on Android/iOS (e.g. `android/libs/notifee_core_release.aar`) is not Open Source\nbut is distributed in minified & obfuscated form. A purchased license is required to use Notifee Core in\nrelease builds and is subject to the Notifee License terms which can be found at:\n\n   https://notifee.app/license-terms",
        "copyright": "Copyright (c) 2016-present Invertase Limited <oss@invertase.io>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-async-storage/async-storage@1.18.1": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-async-storage/async-storage",
        "publisher": "Krzysztof Borowy",
        "email": "hello@krizzu.dev",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-async-storage/async-storage",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-async-storage/async-storage/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015-present, Facebook, Inc.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-community/cli-platform-android@10.2.0": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-community/cli",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-community/cli-platform-android",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-community/cli-platform-android/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2018 react-native-community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2018 react-native-community",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-community/netinfo@9.3.9": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-netinfo/react-native-netinfo",
        "publisher": "Matt Oakes",
        "email": "hello@mattoakes.net",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-community/netinfo",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-community/netinfo/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015-present, Facebook, Inc.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-community/slider@4.4.2": {
        "licenses": "MIT",
        "repository": "https://github.com/callstack/react-native-slider",
        "publisher": "react-native-community",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-community/slider",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-community/slider/README.md",
        "licenseText": "<p align=\"center\">\n  <h1 align=\"center\"> <code>@react-native-community/slider</code> </h1>\n</p>\n<p align=\"center\">\n    <a href=\"https://www.npmjs.com/package/@react-native-community/slider\">\n        <img src=\"https://img.shields.io/npm/v/@react-native-community/slider.svg\" alt=\"Latest version released on npmjs\" />\n    </a>\n    <a href=\"https://github.com/callstack/react-native-slider/actions/workflows/ReactNativeSlider-CI.yml\">\n        <img src=\"https://github.com/callstack/react-native-slider/actions/workflows/ReactNativeSlider-CI.yml/badge.svg?branch=main\" alt=\"Build on GitHub Actions\" />\n    </a>\n    <a href=\"https://github.com/callstack/react-native-slider\">\n        <img src=\"https://img.shields.io/badge/platforms-android%20|%20ios%20|%20windows%20|%20web-lightgrey.svg\" alt=\"Supported platforms\" />\n    </a>\n    <a href=\"https://github.com/callstack/react-native-slider/blob/main/LICENSE.md\">\n        <img src=\"https://img.shields.io/npm/l/@react-native-community/slider.svg\" alt=\"License\" />\n    </a>\n</p>\n<p align=\"center\">\n  React Native component used to select a single value from a range of values.\n  <br>Currently supported on following platforms:\n</p>\n\n|iOS|Android|Windows|Web|\n|:-:|:-:|:-:|:-:|\n|![iOS Screenshot](.github/Examples/Slider-iOS-Example.gif)|![Android Screenshot](.github/Examples/Slider-Android-Example.gif)|![Windows Screenshot](.github/Examples/Slider-Windows-Example.gif)|![Web Screenshot](.github/Examples/Slider-Web-Example.gif)|\n\n## Installation & Usage\n\nTo install this module `cd` to your project directory and enter the following command:\n```\nyarn add @react-native-community/slider\n```\nor\n```\nnpm install @react-native-community/slider --save\n```\nIf using iOS please remember to install cocoapods by running: `npx pod-install`\n\nThe following code presents the basic usage scenario of this library:\n```javascript\nimport Slider from '@react-native-community/slider';\n\n<Slider\n  style={{width: 200, height: 40}}\n  minimumValue={0}\n  maximumValue={1}\n  minimumTrackTintColor=\"#FFFFFF\"\n  maximumTrackTintColor=\"#000000\"\n/>\n```\n\nCheck out the [example project](example) for more examples.\n\n---\n\n**Migrating from the core `react-native` module**\n\nThis module was created when the Slider was split out from the core of React Native.\n<br/>To migrate to this module you need to follow the installation instructions above and then change you imports from:\n\n```javascript\nimport { Slider } from 'react-native';\n```\n\nto:\n\n```javascript\nimport Slider from '@react-native-community/slider';\n```\n\n## React Native Compatibility\nTo use this library you need to ensure you are using the correct version of React Native.\n\n| `@react-native-community/slider` version | Required React Native Version |\n| ---------------------------------------- | ----------------------------- |\n| `4.x.x`                                  | `>=0.60`; `>=0.62` (on Windows);  |\n| `3.1.x`                                  | `>=0.60`                      |\n| `2.x.x`                                  | `>= 0.60`                     |\n| [`1.x.x`](https://github.com/react-native-community/react-native-slider/tree/937f0942f1fffc6ed88b5cf7c88d73b7878f00f0)  | `<= 0.59` |\n\n\n## Properties\n\n| Property | Description | Type | Required | Platform |\n| -------- | ----------- | ---- | -------- | -------- |\n| `style` | Used to style and layout the `Slider`. See `StyleSheet.js` and `ViewStylePropTypes.js` for more info. | View.style | No | |\n| `disabled`| If true the user won't be able to move the slider.<br/>Default value is false. | bool | No | |\n| `maximumValue` | Initial maximum value of the slider.<br/>Default value is 1. | number | No | |\n| `minimumTrackTintColor` | The color used for the track to the left of the button.<br/>Overrides the default blue gradient image on iOS. | [color](https://reactnative.dev/docs/colors) | No | |\n| `minimumValue` | Initial minimum value of the slider.<br/>Default value is 0. | number | No | |\n| `lowerLimit` | Slide lower limit. The user won't be able to slide below this limit. | number | No | Android, iOS |\n| `upperLimit` | Slide upper limit. The user won't be able to slide above this limit. | number | No | Android, iOS |\n| `onSlidingStart` | Callback that is called when the user picks up the slider.<br/>The initial value is passed as an argument to the callback handler. | function | No | |\n| `onSlidingComplete` | Callback that is called when the user releases the slider, regardless if the value has changed.<br/>The current value is passed as an argument to the callback handler. | function | No | |\n| `onValueChange` | Callback continuously called while the user is dragging the slider. | function | No | |\n| `step` | Step value of the slider. The value should be between 0 and (maximumValue - minimumValue). Default value is 0.<br/>On Windows OS the default value is 1% of slider's range (from `minimumValue` to `maximumValue`). | number | No | |\n| `maximumTrackTintColor` | The color used for the track to the right of the button.<br/>Overrides the default gray gradient image on iOS. | [color](https://reactnative.dev/docs/colors) | No | |\n| `testID` | Used to locate this view in UI automation tests. | string | No | |\n| `value` | Write-only property representing the value of the slider. Can be used to programmatically control the position of the thumb. Entered once at the beginning still acts as an initial value. Changing the value programmatically does not trigger any event.<br/>The value should be between minimumValue and maximumValue, which default to 0 and 1 respectively. Default value is 0.<br/>_This is not a controlled component_, you don't need to update the value during dragging. | number | No | |\n| `tapToSeek` | Permits tapping on the slider track to set the thumb position.<br/>Defaults to false on iOS. No effect on Android or Windows. | bool | No | iOS |\n| `inverted` | Reverses the direction of the slider.<br/>Default value is false. | bool | No | |\n| `vertical` | Changes the orientation of the slider to vertical, if set to `true`.<br/>Default value is false. | bool | No | Windows |\n| `thumbTintColor` | Color of the foreground switch grip.<br/>**NOTE:** This prop will override the `thumbImage` prop set, meaning that if both `thumbImage` and `thumbTintColor` will be set, image used for the thumb may not be displayed correctly! | [color](https://reactnative.dev/docs/colors) | No | Android |\n| `maximumTrackImage` | Assigns a maximum track image. Only static images are supported. The leftmost pixel of the image will be stretched to fill the track. | Image<br/>.propTypes<br/>.source | No | iOS |\n| `minimumTrackImage` | Assigns a minimum track image. Only static images are supported. The rightmost pixel of the image will be stretched to fill the track. | Image<br/>.propTypes<br/>.source | No | iOS |\n| `thumbImage` | Sets an image for the thumb. Only static images are supported. Needs to be a URI of a local or network image; base64-encoded SVG is not supported. | Image<br/>.propTypes<br/>.source | No | |\n| `trackImage` | Assigns a single image for the track. Only static images are supported. The center pixel of the image will be stretched to fill the track. | Image<br/>.propTypes<br/>.source | No | iOS | |\n| `ref` | Reference object. | MutableRefObject | No | web |\n| `View` | [Inherited `View` props...](https://github.com/facebook/react-native-website/blob/master/docs/view.md#props) | | | |\n\n## Roadmap and Progress\n\nThere's a Project board available [here](https://github.com/callstack/react-native-slider/projects/1) which contains all reported issues organized into columns regarding their status.\n\nIf you are interested in knowing whether the issue you reported is handled or just to check the status of a feature you would like to have in Slider, please check the board.\n\n## Contributing\n\nThe main package implementation is done in the `package/` directory.\nSo when implementing changes there, make sure your code passes ESLint and the tests. Run the following to verify:\n```sh\ncd package/\nnpm run lint\nnpm run test\n```\n\n* Remember to cover your changes with tests if possible.\n\nWhen [creating an issue](https://github.com/callstack/react-native-slider/issues/new/choose) please remember to specify the platform which the issue occurs on.\n\n## Running the example app \nWhile developing, you can run the example app to test your changes.\n\n### Setup\n\n- Clone the repository\n- Run `npm install` in the root directory to install dependencies.\n- Run `npm run example-<platform>`, where platform can be: `ios`, `android`, `windows`\n\nYou can also do this manually by:\n- Installing node modules for example app\n- Installing pods for iOS app\n- Running example app like always: `npx react-native run-<platform>`\n\n### New architecture setup (Fabric)\n\nIn order to use the new architecture some extra steps are needed. \n#### iOS \n- Install pods with new arch flag inside `example/ios` folder: `RCT_NEW_ARCH_ENABLED=1 pod install`\n- Run `npm run example-ios`\n\n#### Android \n- Set `newArchEnabled` to true inside `example/android/gradle.properties`\n- Run `npm run example-android`\n\n<details>\n<summary>\nIf you are using React Native version lower than 0.70, you need to setup manual linking for Android to work.\n</summary>\n\nInside `example/android/app/src/main/jni/Android.mk` add these lines: \n\n```diff\n+ include $(NODE_MODULES_DIR)/@react-native-community/slider/android/build/generated/source/codegen/jni/Android.mk\ninclude $(CLEAR_VARS)\n```\n\n```diff\n    libreact_codegen_rncore \\\n+   libreact_codegen_ReactSlider \\\n    libreact_debug \\\n```\n\nInside `example/android/app/src/main/jni/MainComponentsRegistry.cpp` update these lines: \n\n```diff\n#include <react/renderer/components/rncore/ComponentDescriptors.h>\n+ #include <react/renderer/components/ReactSlider/ComponentDescriptors.h>\n\n...\n\nMainComponentsRegistry::sharedProviderRegistry() {\n  auto providerRegistry = CoreComponentsRegistry::sharedProviderRegistry();\n\n  // Custom Fabric Components go here. You can register custom\n  // components coming from your App or from 3rd party libraries here.\n  //\n  // providerRegistry->add(concreteComponentDescriptorProvider<\n  //        AocViewerComponentDescriptor>());\n+ providerRegistry->add(concreteComponentDescriptorProvider<RNCSliderComponentDescriptor>());\n\n  return providerRegistry;\n}\n```\n\n</details>\n\n## Maintainers\n\n- [Micha≈Ç Chudziak](https://github.com/michalchudziak) - [Callstack](https://callstack.com/)\n- [Bartosz Klonowski](https://github.com/BartoszKlonowski) - [Callstack](https://callstack.com/)\n\n## Contributors\n\nThis module was extracted from `react-native` core. Please, refer to [contributors graph](https://github.com/react-native-community/react-native-slider/graphs/contributors) for the complete list of contributors.\n\n---\n\n## Made with ‚ù§Ô∏è at Callstack\n\n`@callstack/react-native-slider` is an open source project and will always remain free to use. If you think it's cool, please star it üåü. [Callstack](https://callstack.com/) is a group of React and React Native geeks, contact us at [hello@callstack.com](mailto:hello@callstack.com) if you need any help with these or just want to say hi!\n\nLike the project? ‚öõÔ∏è [Join the team](https://callstack.com/careers) who does amazing stuff for clients and drives React Native Open Source! üî•",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-firebase/analytics@17.4.2": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/react-native-firebase.git#main",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/analytics",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/analytics/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/",
        "copyright": "Copyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-firebase/app@17.4.2": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/react-native-firebase.git#main",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/app",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/app/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io>\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/",
        "copyright": "Copyright (c) 2016-present Invertase Limited <oss@invertase.io>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-firebase/crashlytics@17.4.2": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/react-native-firebase.git#main",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/crashlytics",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/crashlytics/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/",
        "copyright": "Copyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-firebase/messaging@17.4.2": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/react-native-firebase.git#main",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/messaging",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-firebase/messaging/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/",
        "copyright": "Copyright (c) 2016-present Invertase Limited <oss@invertase.io> & Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-native-google-signin/google-signin@9.0.2": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-google-signin/google-signin",
        "publisher": "Vojtech Novak",
        "email": "vonovak@gmail.com",
        "url": "https://github.com/vonovak",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-google-signin/google-signin",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-native-google-signin/google-signin/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Apptailor\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015 Apptailor",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-navigation/bottom-tabs@6.5.7": {
        "licenses": "MIT",
        "repository": "https://github.com/react-navigation/react-navigation",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/bottom-tabs",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/bottom-tabs/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2017 React Navigation Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017 React Navigation Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-navigation/drawer@6.6.2": {
        "licenses": "MIT",
        "repository": "https://github.com/react-navigation/react-navigation",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/drawer",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/drawer/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2017 React Navigation Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017 React Navigation Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-navigation/native-stack@6.9.12": {
        "licenses": "MIT",
        "repository": "https://github.com/react-navigation/react-navigation",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/native-stack",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/native-stack/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2017 React Navigation Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017 React Navigation Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@react-navigation/native@6.1.6": {
        "licenses": "MIT",
        "repository": "https://github.com/react-navigation/react-navigation",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/native",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@react-navigation/native/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2017 React Navigation Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017 React Navigation Contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@reduxjs/toolkit@1.9.3": {
        "licenses": "MIT",
        "repository": "https://github.com/reduxjs/redux-toolkit",
        "publisher": "Mark Erikson",
        "email": "mark@isquaredsoftware.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@reduxjs/toolkit",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@reduxjs/toolkit/LICENSE",
        "licenseText": "MIT License\r\n\r\nCopyright (c) 2018 Mark Erikson\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
        "copyright": "Copyright (c) 2018 Mark Erikson",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@rneui/base@4.0.0-rc.7": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-elements/react-native-elements",
        "publisher": "RNE Core Team",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@rneui/base",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@rneui/base/README.md",
        "licenseText": "<p align=\"center\">\n  <a href=\"https://reactnativeelements.com/\">\n    <img alt=\"react-native-elements\" src=\"https://user-images.githubusercontent.com/5962998/65694309-a825f000-e043-11e9-8382-db0dba0851e3.png\" width=\"200\">\n  </a>\n</p>\n\n<p align=\"center\">\n  Cross Platform <a href=\"https://reactnative.dev\">React Native</a> UI Toolkit\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@rneui/base\"><img src=\"https://img.shields.io/npm/v/@rneui/base.svg?style=flat-square\"></a>\n  <a href=\"https://www.npmjs.com/package/@rneui/base\"><img src=\"https://img.shields.io/npm/dm/@rneui/base.svg?style=flat-square\"></a>\n  <a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&color=0089E3\"></a>\n  <a href=\"https://github.com/react-native-elements/react-native-elements\"><img src=\"https://img.shields.io/github/stars/react-native-elements/react-native-elements?label=stars&logo&style=flat-square&color=0089E3\"></a>\n\n</p>\n\n<div align=\"center\">\n <a href=\"https://twitter.com/rn_elements\"><img src=\"https://img.shields.io/twitter/follow/rn_elements?style=flat-square&label=Twitter&logo=TWITTER&color=0089E3\"></a>\n  <a href=\"https://github.com/react-native-elements/react-native-elements/discussions\"><img src=\"https://img.shields.io/github/discussions/react-native-elements/react-native-elements?label=Discussions&logo=github&style=flat-square\"></a>\n  <a href=\"https://react-native-elements-slack.herokuapp.com\"><img src=\"https://img.shields.io/badge/Join-Slack-4A154B?style=flat-square&logo=slack&color=0089E3&\"></a>\n\n</div>\n\n<p align=\"center\">\n  <a href=\"#backers\"><img src=\"https://opencollective.com/react-native-elements/backers/badge.svg?style=flat-square&color=0089E3\"></a>\n  <a href=\"#sponsors\"><img src=\"https://opencollective.com/react-native-elements/sponsors/badge.svg?style=flat-square&color=0089E3&logo=opencollective\"></a>\n  <a href=\"https://github.com/sponsors/react-native-elements\"><img src=\"https://img.shields.io/github/sponsors/react-native-elements?label=Sponsor&logo=githubsponsors&style=flat-square\"></a>\n</p>\n\n<br />\n\n![React Native Elements UI Toolkit](https://user-images.githubusercontent.com/5962998/37248832-a7060286-24b1-11e8-94a8-847ab6ded4ec.png)\n\n## Installation\n\n```bash\nnpm install @rneui/base\n```\n\nFollow\n[these instructions](https://reactnativeelements.com/docs/)\nto install React Native Elements!\n\n## Usage\n\nStart using the components or try it on Snack\n[here](https://snack.expo.io/rJu6gJfBZ).\n\n```js\nimport { Button } from '@rneui/base';\n\nconst App = () => <Button title=\"Hello World\" />;\n```\n\n## React Native Web support\n\nAs a cross platform UI Toolkit, you can now use RNE on the web & share your codebase between your React Native + React web apps. RNE components are rendered perfectly on browser. You can achieve this to target iOS, Android and Web by collaborating RNE and [React Native for Web](https://github.com/necolas/react-native-web).\n\nClick [here](https://reactnativeelements.com/blog/2018/12/13/react-native-web) for a full walkthrough using React Native Elements + React Native Web.\n\n## Expo demo app\n\nCheckout the official\n[React Native Elements App](https://expo.dev/@rn_elements/react-native-elements)\non Expo which uses all of the React Native Elements components.\n\nIf you are looking to contribute to the React Native Elements App, click\n[here](https://github.com/react-native-elements/react-native-elements/tree/next/example) to\nview the implementation & run the RNE expo app locally.\n\n## VS Code Extension\n\nInstall the [React Native Elements VS Code Extension](https://marketplace.visualstudio.com/items?itemName=rne.snippets) to speed up development.\n\n## Documentation\n\n[View the full docs here](https://reactnativeelements.com/docs)\n\n## Contributing\n\nInterested in contributing to this repo? Check out our\n[Contributing Guide](https://reactnativeelements.com/docs/contributing)\nand submit a PR for a new feature/bug fix.\n\nA big shoutout to all our contributors! You could be here too!\n\n<a href=\"https://github.com/react-native-elements/react-native-elements/graphs/contributors\"><img src=\"https://opencollective.com/react-native-elements/contributors.svg?width=890&button=false\" /></a>\n\n### First Contributors\n\nWe encourage everyone to contribute & submit PR's especially first-time\ncontributors. Look for the label `Good First Issue` on the issues. Click\n[here](https://github.com/react-native-elements/react-native-elements/labels/%F0%9F%91%B6%20Good%20First%20Issue)\nto see them.\n\nIf there is something you's like to see or request a new feature, please submit\nan\n[issue](https://github.com/react-native-elements/react-native-elements/issues/new)\nor a\n[pull request](https://github.com/react-native-elements/react-native-elements/pulls).\n\n### Core Contributors\n\nWe are currently looking for new core contributors that can help lead this project.\n\n[Learn more here](https://github.com/react-native-elements/react-native-elements/issues/2222)\n\n### Slack Community\n\nIn case you have any other question or would like to come say **Hi!** to the RNE\ncommunity, join our [Slack team](https://react-native-elements-slack.herokuapp.com).\nSee you on the other side! üëãüòÉ\n\n## Backers\n\n[Become a backer](https://opencollective.com/react-native-elements#backer) and show your support for React Native Elements.\n\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/0/avatar)](https://opencollective.com/react-native-elements/backer/0/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/1/avatar)](https://opencollective.com/react-native-elements/backer/1/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/2/avatar)](https://opencollective.com/react-native-elements/backer/2/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/3/avatar)](https://opencollective.com/react-native-elements/backer/3/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/4/avatar)](https://opencollective.com/react-native-elements/backer/4/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/5/avatar)](https://opencollective.com/react-native-elements/backer/5/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/6/avatar)](https://opencollective.com/react-native-elements/backer/6/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/7/avatar)](https://opencollective.com/react-native-elements/backer/7/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/8/avatar)](https://opencollective.com/react-native-elements/backer/8/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/9/avatar)](https://opencollective.com/react-native-elements/backer/9/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/10/avatar)](https://opencollective.com/react-native-elements/backer/10/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/11/avatar)](https://opencollective.com/react-native-elements/backer/11/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/12/avatar)](https://opencollective.com/react-native-elements/backer/12/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/13/avatar)](https://opencollective.com/react-native-elements/backer/13/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/14/avatar)](https://opencollective.com/react-native-elements/backer/14/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/15/avatar)](https://opencollective.com/react-native-elements/backer/15/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/16/avatar)](https://opencollective.com/react-native-elements/backer/16/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/17/avatar)](https://opencollective.com/react-native-elements/backer/17/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/18/avatar)](https://opencollective.com/react-native-elements/backer/18/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/19/avatar)](https://opencollective.com/react-native-elements/backer/19/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/20/avatar)](https://opencollective.com/react-native-elements/backer/20/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/21/avatar)](https://opencollective.com/react-native-elements/backer/21/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/22/avatar)](https://opencollective.com/react-native-elements/backer/22/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/23/avatar)](https://opencollective.com/react-native-elements/backer/23/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/24/avatar)](https://opencollective.com/react-native-elements/backer/24/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/25/avatar)](https://opencollective.com/react-native-elements/backer/25/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/26/avatar)](https://opencollective.com/react-native-elements/backer/26/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/27/avatar)](https://opencollective.com/react-native-elements/backer/27/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/28/avatar)](https://opencollective.com/react-native-elements/backer/28/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/29/avatar)](https://opencollective.com/react-native-elements/backer/29/website)\n\n## Sponsors\n\nDo you use React Native Elements in production? If so, consider supporting this project as it will allow the maintainers to dedicate more time to maintaining this project and also building new features for everyone. Also, your app or company's logo will show [on GitHub](https://github.com/react-native-elements/react-native-elements#sponsors) and link to your website - who doesn't want a little extra exposure? [Here's the info](https://opencollective.com/react-native-elements#sponsor).\n\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/0/avatar)](https://opencollective.com/react-native-elements/sponsor/0/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/1/avatar)](https://opencollective.com/react-native-elements/sponsor/1/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/2/avatar)](https://opencollective.com/react-native-elements/sponsor/2/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/3/avatar)](https://opencollective.com/react-native-elements/sponsor/3/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/4/avatar)](https://opencollective.com/react-native-elements/sponsor/4/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/5/avatar)](https://opencollective.com/react-native-elements/sponsor/5/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/6/avatar)](https://opencollective.com/react-native-elements/sponsor/6/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/7/avatar)](https://opencollective.com/react-native-elements/sponsor/7/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/8/avatar)](https://opencollective.com/react-native-elements/sponsor/8/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/9/avatar)](https://opencollective.com/react-native-elements/sponsor/9/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/10/avatar)](https://opencollective.com/react-native-elements/sponsor/10/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/11/avatar)](https://opencollective.com/react-native-elements/sponsor/11/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/12/avatar)](https://opencollective.com/react-native-elements/sponsor/12/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/13/avatar)](https://opencollective.com/react-native-elements/sponsor/13/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/14/avatar)](https://opencollective.com/react-native-elements/sponsor/14/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/15/avatar)](https://opencollective.com/react-native-elements/sponsor/15/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/16/avatar)](https://opencollective.com/react-native-elements/sponsor/16/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/17/avatar)](https://opencollective.com/react-native-elements/sponsor/17/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/18/avatar)](https://opencollective.com/react-native-elements/sponsor/18/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/19/avatar)](https://opencollective.com/react-native-elements/sponsor/19/website)",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@rneui/themed@4.0.0-rc.7": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-elements/react-native-elements",
        "publisher": "RNE Core Team",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@rneui/themed",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@rneui/themed/README.md",
        "licenseText": "<p align=\"center\">\n  <a href=\"https://reactnativeelements.com/\">\n    <img alt=\"react-native-elements\" src=\"https://user-images.githubusercontent.com/5962998/65694309-a825f000-e043-11e9-8382-db0dba0851e3.png\" width=\"200\">\n  </a>\n</p>\n\n<p align=\"center\">\n  Cross Platform <a href=\"https://reactnative.dev\">React Native</a> UI Toolkit\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@rneui/themed\"><img src=\"https://img.shields.io/npm/v/@rneui/themed.svg?style=flat-square\"></a>\n   <a href=\"https://www.npmjs.com/package/@rneui/themed\"><img src=\"https://img.shields.io/npm/dm/@rneui/themed.svg?style=flat-square\"></a>\n  <a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&color=0089E3\"></a>\n  <a href=\"https://github.com/react-native-elements/react-native-elements\"><img src=\"https://img.shields.io/github/stars/react-native-elements/react-native-elements?label=stars&logo&style=flat-square&color=0089E3\"></a>\n</p>\n\n<div align=\"center\">\n   <a href=\"https://twitter.com/rn_elements\"><img src=\"https://img.shields.io/twitter/follow/rn_elements?style=flat-square&label=Twitter&logo=TWITTER&color=0089E3\"></a>\n  <a href=\"https://github.com/react-native-elements/react-native-elements/discussions\"><img src=\"https://img.shields.io/github/discussions/react-native-elements/react-native-elements?label=Discussions&logo=github&style=flat-square\"></a>\n  <a href=\"https://react-native-elements-slack.herokuapp.com\"><img src=\"https://img.shields.io/badge/Join-Slack-4A154B?style=flat-square&logo=slack&color=0089E3&\"></a>\n\n</div>\n\n<p align=\"center\">\n  <a href=\"#backers\"><img src=\"https://opencollective.com/react-native-elements/backers/badge.svg?style=flat-square&color=0089E3\"></a>\n  <a href=\"#sponsors\"><img src=\"https://opencollective.com/react-native-elements/sponsors/badge.svg?style=flat-square&color=0089E3&logo=opencollective\"></a>\n  <a href=\"https://github.com/sponsors/react-native-elements\"><img src=\"https://img.shields.io/github/sponsors/react-native-elements?label=Sponsor&logo=githubsponsors&style=flat-square\"></a>\n</p>\n\n<br />\n\n![React Native Elements UI Toolkit](https://user-images.githubusercontent.com/5962998/37248832-a7060286-24b1-11e8-94a8-847ab6ded4ec.png)\n\n## Installation\n\n```bash\nnpm install @rneui/themed\n```\n\nFollow\n[these instructions](https://reactnativeelements.com/docs/)\nto install React Native Elements!\n\n## Usage\n\nStart using the components or try it on Snack\n[here](https://snack.expo.io/rJu6gJfBZ).\n\n```js\nimport { Button } from '@rneui/themed';\n\n<Button />;\n```\n\n## React Native Web support\n\nAs a cross platform UI Toolkit, you can now use RNE on the web & share your codebase between your React Native + React web apps. RNE components are rendered perfectly on browser. You can achieve this to target iOS, Android and Web by collaborating RNE and [React Native for Web](https://github.com/necolas/react-native-web).\n\nClick [here](https://reactnativeelements.com/blog/2018/12/13/react-native-web) for a full walkthrough using React Native Elements + React Native Web.\n\n## Expo demo app\n\nCheckout the official\n[React Native Elements App](https://expo.dev/@rn_elements/react-native-elements)\non Expo which uses all of the React Native Elements components.\n\nIf you are looking to contribute to the React Native Elements App, click\n[here](https://github.com/react-native-elements/react-native-elements/tree/next/example) to\nview the implementation & run the RNE expo app locally.\n\n## VS Code Extension\n\nInstall the [React Native Elements VS Code Extension](https://marketplace.visualstudio.com/items?itemName=rne.snippets) to speed up development.\n\n## Documentation\n\n[View the full docs here](https://reactnativeelements.com/docs/overview)\n\n## Contributing\n\nInterested in contributing to this repo? Check out our\n[Contributing Guide](https://reactnativeelements.com/docs/contributing)\nand submit a PR for a new feature/bug fix.\n\nA big shoutout to all our contributors! You could be here too!\n\n<a href=\"https://github.com/react-native-elements/react-native-elements/graphs/contributors\"><img src=\"https://opencollective.com/react-native-elements/contributors.svg?width=890&button=false\" /></a>\n\n### First Contributors\n\nWe encourage everyone to contribute & submit PR's especially first-time\ncontributors. Look for the label `Good First Issue` on the issues. Click\n[here](https://github.com/react-native-elements/react-native-elements/labels/%F0%9F%91%B6%20Good%20First%20Issue)\nto see them.\n\nIf there is something you's like to see or request a new feature, please submit\nan\n[issue](https://github.com/react-native-elements/react-native-elements/issues/new)\nor a\n[pull request](https://github.com/react-native-elements/react-native-elements/pulls).\n\n### Core Contributors\n\nWe are currently looking for new core contributors that can help lead this project.\n\n[Learn more here](https://github.com/react-native-elements/react-native-elements/issues/2222)\n\n### Slack Community\n\nIn case you have any other question or would like to come say **Hi!** to the RNE\ncommunity, join our [Slack team](https://react-native-elements-slack.herokuapp.com).\nSee you on the other side! üëãüòÉ\n\n## Backers\n\n[Become a backer](https://opencollective.com/react-native-elements#backer) and show your support for React Native Elements.\n\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/0/avatar)](https://opencollective.com/react-native-elements/backer/0/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/1/avatar)](https://opencollective.com/react-native-elements/backer/1/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/2/avatar)](https://opencollective.com/react-native-elements/backer/2/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/3/avatar)](https://opencollective.com/react-native-elements/backer/3/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/4/avatar)](https://opencollective.com/react-native-elements/backer/4/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/5/avatar)](https://opencollective.com/react-native-elements/backer/5/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/6/avatar)](https://opencollective.com/react-native-elements/backer/6/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/7/avatar)](https://opencollective.com/react-native-elements/backer/7/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/8/avatar)](https://opencollective.com/react-native-elements/backer/8/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/9/avatar)](https://opencollective.com/react-native-elements/backer/9/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/10/avatar)](https://opencollective.com/react-native-elements/backer/10/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/11/avatar)](https://opencollective.com/react-native-elements/backer/11/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/12/avatar)](https://opencollective.com/react-native-elements/backer/12/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/13/avatar)](https://opencollective.com/react-native-elements/backer/13/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/14/avatar)](https://opencollective.com/react-native-elements/backer/14/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/15/avatar)](https://opencollective.com/react-native-elements/backer/15/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/16/avatar)](https://opencollective.com/react-native-elements/backer/16/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/17/avatar)](https://opencollective.com/react-native-elements/backer/17/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/18/avatar)](https://opencollective.com/react-native-elements/backer/18/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/19/avatar)](https://opencollective.com/react-native-elements/backer/19/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/20/avatar)](https://opencollective.com/react-native-elements/backer/20/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/21/avatar)](https://opencollective.com/react-native-elements/backer/21/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/22/avatar)](https://opencollective.com/react-native-elements/backer/22/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/23/avatar)](https://opencollective.com/react-native-elements/backer/23/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/24/avatar)](https://opencollective.com/react-native-elements/backer/24/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/25/avatar)](https://opencollective.com/react-native-elements/backer/25/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/26/avatar)](https://opencollective.com/react-native-elements/backer/26/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/27/avatar)](https://opencollective.com/react-native-elements/backer/27/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/28/avatar)](https://opencollective.com/react-native-elements/backer/28/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/backer/29/avatar)](https://opencollective.com/react-native-elements/backer/29/website)\n\n## Sponsors\n\nDo you use React Native Elements in production? If so, consider supporting this project as it will allow the maintainers to dedicate more time to maintaining this project and also building new features for everyone. Also, your app or company's logo will show [on GitHub](https://github.com/react-native-elements/react-native-elements#sponsors) and link to your website - who doesn't want a little extra exposure? [Here's the info](https://opencollective.com/react-native-elements#sponsor).\n\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/0/avatar)](https://opencollective.com/react-native-elements/sponsor/0/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/1/avatar)](https://opencollective.com/react-native-elements/sponsor/1/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/2/avatar)](https://opencollective.com/react-native-elements/sponsor/2/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/3/avatar)](https://opencollective.com/react-native-elements/sponsor/3/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/4/avatar)](https://opencollective.com/react-native-elements/sponsor/4/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/5/avatar)](https://opencollective.com/react-native-elements/sponsor/5/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/6/avatar)](https://opencollective.com/react-native-elements/sponsor/6/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/7/avatar)](https://opencollective.com/react-native-elements/sponsor/7/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/8/avatar)](https://opencollective.com/react-native-elements/sponsor/8/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/9/avatar)](https://opencollective.com/react-native-elements/sponsor/9/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/10/avatar)](https://opencollective.com/react-native-elements/sponsor/10/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/11/avatar)](https://opencollective.com/react-native-elements/sponsor/11/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/12/avatar)](https://opencollective.com/react-native-elements/sponsor/12/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/13/avatar)](https://opencollective.com/react-native-elements/sponsor/13/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/14/avatar)](https://opencollective.com/react-native-elements/sponsor/14/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/15/avatar)](https://opencollective.com/react-native-elements/sponsor/15/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/16/avatar)](https://opencollective.com/react-native-elements/sponsor/16/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/17/avatar)](https://opencollective.com/react-native-elements/sponsor/17/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/18/avatar)](https://opencollective.com/react-native-elements/sponsor/18/website)\n[![React Native Elements Backer](https://opencollective.com/react-native-elements/sponsor/19/avatar)](https://opencollective.com/react-native-elements/sponsor/19/website)",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "@types/domutils@1.7.4": {
        "licenses": "MIT",
        "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@types/domutils",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/@types/domutils/LICENSE",
        "licenseText": "MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "async-mutex@0.4.0": {
        "licenses": "MIT",
        "repository": "https://github.com/DirtyHairy/async-mutex",
        "publisher": "Christian Speckner",
        "email": "cnspeckn@googlemail.com",
        "url": "https://github.com/DirtyHairy/",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/async-mutex",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/async-mutex/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
        "copyright": "Copyright (c) 2016 Christian Speckner <cnspeckn@googlemail.com>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "axios@1.3.5": {
        "licenses": "MIT",
        "repository": "https://github.com/axios/axios",
        "publisher": "Matt Zabriskie",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/axios",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/axios/LICENSE",
        "licenseText": "# Copyright (c) 2014-present Matt Zabriskie & Collaborators\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "buffer@6.0.3": {
        "licenses": "MIT",
        "repository": "https://github.com/feross/buffer",
        "publisher": "Feross Aboukhadijeh",
        "email": "feross@feross.org",
        "url": "https://feross.org",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/buffer",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/buffer/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) Feross Aboukhadijeh, and other contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
        "copyright": "Copyright (c) Feross Aboukhadijeh, and other contributors.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "domutils@3.0.1": {
        "licenses": "BSD-2-Clause",
        "repository": "https://github.com/fb55/domutils",
        "publisher": "Felix Boehm",
        "email": "me@feedic.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/domutils",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/domutils/LICENSE",
        "licenseText": "Copyright (c) Felix B√∂hm\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "copyright": "Copyright (c) Felix B√∂hm. All rights reserved.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo-av@13.0.3": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "650 Industries, Inc.",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-av",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-av/README.md",
        "licenseText": "# expo-av\n\nExpo universal module for Audio and Video playback\n\n# API documentation\n\n- [Documentation for the main branch](https://github.com/expo/expo/blob/main/docs/pages/versions/unversioned/sdk/av.md)\n- [Documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/av/)\n\n# Installation in managed Expo projects\n\nFor [managed](https://docs.expo.dev/versions/latest/introduction/managed-vs-bare/) Expo projects, please follow the installation instructions in the [API documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/av/).\n\n# Installation in bare React Native projects\n\nFor bare React Native projects, you must ensure that you have [installed and configured the `expo` package](https://docs.expo.dev/bare/installing-expo-modules/) before continuing.\n\n### Add the package to your npm dependencies\n\n```\nexpo install expo-av\n```\n\n### Configure for iOS\n\nAdd `NSMicrophoneUsageDescription` key to your `Info.plist`:\n\n```xml\n<key>NSMicrophoneUsageDescription</key>\n<string>Allow $(PRODUCT_NAME) to access your microphone</string>\n```\n\nRun `npx pod-install` after installing the npm package.\n\n### Configure for Android\n\nAdd `android.permission.RECORD_AUDIO` permission to your manifest (`android/app/src/main/AndroidManifest.xml`):\n\n```xml\n<uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n```\n\n# Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide](https://github.com/expo/expo#contributing).",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo-font@11.1.1": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "650 Industries, Inc.",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-font",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-font/README.md",
        "licenseText": "# expo-font\n\nLoad fonts at runtime and use them in React Native components.\n\n# API documentation\n\n- [Documentation for the main branch](https://github.com/expo/expo/blob/main/docs/pages/versions/unversioned/sdk/font.mdx)\n- [Documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/font/)\n\n# Installation in managed Expo projects\n\nFor [managed](https://docs.expo.dev/versions/latest/introduction/managed-vs-bare/) Expo projects, please follow the installation instructions in the [API documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/font/).\n\n# Installation in bare React Native projects\n\nFor bare React Native projects, you must ensure that you have [installed and configured the `expo` package](https://docs.expo.dev/bare/installing-expo-modules/) before continuing.\n\n### Add the package to your npm dependencies\n\n```\nexpo install expo-font\n```\n\n### Configure for iOS\n\nRun `npx pod-install` after installing the npm package.\n\n### Configure for Android\n\nNo additional set up necessary.\n\n# Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide](https://github.com/expo/expo#contributing).",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo-linear-gradient@12.1.2": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "650 Industries, Inc.",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-linear-gradient",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-linear-gradient/README.md",
        "licenseText": "<p>\n  <a href=\"https://docs.expo.dev/versions/latest/sdk/linear-gradient/\">\n    <img\n      src=\"../../.github/resources/expo-linear-gradient.svg\"\n      alt=\"expo-linear-gradient\"\n      height=\"64\" />\n  </a>\n</p>\n\nProvides a React component that renders a gradient view.\n\n# API documentation\n\n- [Documentation for the main branch](https://github.com/expo/expo/blob/main/docs/pages/versions/unversioned/sdk/linear-gradient.mdx)\n- [Documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/linear-gradient/)\n\n# Installation in managed Expo projects\n\nFor [managed](https://docs.expo.dev/versions/latest/introduction/managed-vs-bare/) Expo projects, please follow the installation instructions in the [API documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/linear-gradient/).\n\n# Installation in bare React Native projects\n\nFor bare React Native projects, you must ensure that you have [installed and configured the `expo` package](https://docs.expo.dev/bare/installing-expo-modules/) before continuing.\n\n### Add the package to your npm dependencies\n\n```\nexpo install expo-linear-gradient\n```\n\n### Configure for iOS\n\nRun `npx pod-install` after installing the npm package.\n\n### Configure for Android\n\nNo additional set up necessary.\n\n# Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide](https://github.com/expo/expo#contributing).",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo-modules-core@1.2.6": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "650 Industries, Inc.",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-modules-core",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-modules-core/README.md",
        "licenseText": "<p>\n  <a href=\"https://docs.expo.dev/modules/\">\n    <img\n      src=\"../../.github/resources/expo-modules-core.svg\"\n      alt=\"expo-modules-core\"\n      height=\"64\" />\n  </a>\n</p>\n\nThe core of Expo Modules architecture.\n\n# Installation in managed Expo projects\n\nFor [managed](https://docs.expo.dev/versions/latest/introduction/managed-vs-bare/) Expo projects, please follow the installation instructions in the [API documentation for the latest stable release](#api-documentation). If you follow the link and there is no documentation available then this library is not yet usable within managed projects &mdash; it is likely to be included in an upcoming Expo SDK release.\n\n# Installation in bare React Native projects\n\nFor bare React Native projects, you must ensure that you have [installed and configured the `expo` package](https://docs.expo.dev/bare/installing-expo-modules/) before continuing.\n\n### Add the package to your npm dependencies\n\n```\nnpm install expo-modules-core\n```\n\n### Configure for iOS\n\nRun `npx pod-install` after installing the npm package.\n\n### Configure for Android\n\nNo additional set up necessary.\n\n# Importing native dependencies - autolinking\n\nMany React Native libraries come with platform-specific (native) code. This native code has to be linked into the project and, in some cases, configured further. These actions require some modifications to the native project files. One of the steps that has to be done with the native configuration is to enable the autolinking mechanism that takes care of including any supported module's native code into the project. The following configuration is required:\n\n### iOS\n\n> Caution! After you have made the following changes you will need to run `pod install` again.\n\n```ruby\n# Podfile\n\nrequire File.join(File.dirname(`node --print \"require.resolve('react-native/package.json')\"`), \"scripts/react_native_pods\")\nrequire File.join(File.dirname(`node --print \"require.resolve('expo-modules-core/package.json')\"`), \"cocoapods.rb\")\nrequire File.join(File.dirname(`node --print \"require.resolve('expo-modules-core/package.json')\"`), \"scripts/autolinking\")\n\n#  ...\n\ntarget \"TargetName\" do\n  use_unimodules!\n  config = use_native_modules!\n  use_react_native!(:path => config[\"reactNativePath\"])\n\n  # ...\nend\n```\n\n### Android\n\n```groovy\n// app/build.gradle\n\napply from: new File([\"node\", \"--print\", \"require.resolve('expo-modules-core/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle.groovy\")\napply from: new File([\"node\", \"--print\", \"require.resolve('react-native/package.json')\"].execute(null, rootDir).text.trim(), \"../react.gradle\")\napply from: new File([\"node\", \"--print\", \"require.resolve('expo-updates/package.json')\"].execute(null, rootDir).text.trim(), \"../scripts/create-manifest-android.gradle\")\n\n// ...\n\napply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\napplyNativeModulesAppBuildGradle(project)\n```\n\n```groovy\n// settings.gradle\n\napply from: new File([\"node\", \"--print\", \"require.resolve('expo-modules-core/package.json')\"].execute(null, rootDir).text.trim(), \"../gradle.groovy\");\nincludeUnimodulesProjects()\n\napply from: new File([\"node\", \"--print\", \"require.resolve('@react-native-community/cli-platform-android/package.json')\"].execute(null, rootDir).text.trim(), \"../native_modules.gradle\");\napplyNativeModulesSettingsGradle(settings)\n```\n\n### Explanation\n\nThe scripts that are referenced in Gradle and Cocoapods are usually found the related package inside the project's `node_modules` directory. In the case of monorepos (such as Yarn workspaces) the project directory may not contain `node_modules` at all; instead, the modules are likely to be located at the root of the repository. In order to ensure that both cases are supported, we take advantage of the Node dependency resolution strategy. We invoke a subprocess that spawns the simple JavaScript snippet that tries to locate the desired npm package containing the script we need.\n\n- On iOS, we use [`` ` ` `` (backtick)](https://stackoverflow.com/questions/3159945/running-command-line-commands-within-ruby-script) ([alternative reference](https://ruby-doc.org/core-3.0.2/Kernel.html#method-i-60)).\n- On Android, we use [String[]#execute](<http://docs.groovy-lang.org/latest/html/groovy-jdk/java/lang/String[].html#execute()>) to obtain the results from the subprocess' stdout.\n\nThe Node process that is spawned runs [`require.resolve`](https://nodejs.org/dist/latest-v14.x/docs/api/modules.html#modules_require_resolve_request_options) to obtain the path to a module's `package.json`(if you look for the module location using solely module name, you'll be given the path to the file pointed by the `main` attribute from the `package.json` and we need to know the location of the module's root directory). We then assemble the path to the desired script and execute it.\n\nYou can read more about the scripts and libraries used in the examples above in their official READMEs.\n\n# Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide](https://github.com/expo/expo#contributing).",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo-splash-screen@0.18.1": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "650 Industries, Inc.",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-splash-screen",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-splash-screen/README.md",
        "licenseText": "# expo-splash-screen\n\n`expo-splash-screen` allows you to customize your app's splash screen, which is the initial screen users see when the app is launched, before it has loaded. Splash screens (sometimes called launch screens) provide a user's first experience with your application.\n\n- [üìú CHANGELOG](./CHANGELOG.md)\n- [üöÄ Features](#-features)\n- [üìö API](#-api)\n- [üóí Examples](#-examples)\n- [üíª Installation in managed Expo projects](#-installation-in-managed-expo-projects)\n- [üñ• Installation in bare React Native projects](#-installation-in-bare-react-native-projects)\n  - [üì± Configure iOS](#-configure-ios)\n  - [ü§ñ Configure Android](#-configure-android)\n- [üëè Contributing](#-contributing)\n- [‚ùì Known issues](#-known-issues)\n- [‚¨ÜÔ∏è Migrate from old versions](#%EF%B8%8F-migrate-from-old-versions)\n- [üèÖ Hall of fame](#-hall-of-fame)\n\n## üöÄ Features\n\n### Built-in splash screen image resize modes\n\n`expo-splash-screen` contains a built-in feature for taking care of properly displaying your splash screen image. You can use the following resize modes to obtain behavior as if you were using the React Native `<Image>` component's `resizeMode` style.\n\n#### `CONTAIN` resize mode\n\nScale the image uniformly (maintaining the image's aspect ratio) so that both dimensions the width and height of the image will be equal to or less than the corresponding dimension of the device's screen.\n\n<table>\n  <thead><tr><td>Android</td><td>iOS</td></tr></thead>\n  <tbody><tr>\n<td>\n\nhttps://user-images.githubusercontent.com/379606/120575867-aeeb3580-c3d6-11eb-825d-19a847fe30f5.mp4\n</td>\n<td>\n\nhttps://user-images.githubusercontent.com/379606/120575885-b6124380-c3d6-11eb-8485-75a11832962c.mp4\n</td>\n    </tr>\n  </tbody>\n</table>\n\n#### `COVER` resize mode\n\nScale the image uniformly (maintaining the image's aspect ratio) so that both the width and height of the image will be equal to or larger than the corresponding dimension of the device's screen.\n\n<table>\n  <thead><tr><td>Android</td><td>iOS</td></tr></thead>\n  <tbody><tr>\n<td>\n\nhttps://user-images.githubusercontent.com/379606/120575871-b1e62600-c3d6-11eb-9435-5dee19791294.mp4\n</td>\n<td>\n\nhttps://user-images.githubusercontent.com/379606/120575890-b7437080-c3d6-11eb-9c0a-3c563d1ee02a.mp4\n</td>\n    </tr>\n  </tbody>\n</table>\n\n#### `NATIVE` resize mode\n\n> **Android only.**\n\nBy using this resize mode your app will will leverage Android's ability to present a static bitmap while the application is starting up.\nAndroid (unlike iOS) does not support stretching of the provided image during launch, so the application will present the given image centered on the screen at its original dimensions.\n\n<table>\n  <thead><tr><td>Android</td></tr></thead>\n  <tbody><tr>\n<td>\n\nhttps://user-images.githubusercontent.com/379606/120575878-b3afe980-c3d6-11eb-80c1-72441c22e8be.mp4\n</td>\n    </tr>\n  </tbody>\n</table>\n\n> Animation above presents one of our [known issues](#native-mode-pushes-splash-image-up-a-little-bit)\n\nSelecting this resize mode requires some more work to be done in native configuration.\nPlease take a look at the [`res/drawable/splashscreen.xml`](#resdrawablesplashscreenxml) and [`res/drawable/splashscreen_background.png`](#resdrawablesplashscreen_backgroundpng) sections.\n\n### Per-appearance (a.k.a. dark-mode) splash screen\n\n`expo-splash-screen` supports per-appearance splash screens that respond to system appearance changes on iOS 13+ and dark-mode changes on Android 10+.\n\n### StatusBar customization\n\n`expo-splash-screen` allows customization of the StatusBar according to the [ReactNative StatusBar API](https://reactnative.dev/docs/statusbar).\n\n## üìö API\n\n```tsx\nimport * as SplashScreen from 'expo-splash-screen';\n```\n\nThe native splash screen that is controlled via this module autohides once the ReactNative-controlled view hierarchy is mounted. This means that when your app first `render`s view component, the native splash screen will hide. This default behavior can be prevented by calling [`SplashScreen.preventAutoHideAsync()`](#splashscreenpreventautohideasync) and later on [`SplashScreen.hideAsync()`](#splashscreenhideasync).\n\n### `SplashScreen.preventAutoHideAsync()`\n\nThis method makes the native splash screen stay visible until [`SplashScreen.hideAsync()`](#splashscreenhideasync) is called. This must be called before any ReactNative-controlled view hierarchy is rendered (either in the global scope of your main component, or when the component renders `null` at the beginning - see [Examples section](#-examples)).\n\nPreventing default autohiding might come in handy if your application needs to prepare/download some resources and/or make some API calls before first rendering some actual view hierarchy.\n\n#### Returns\n\nA `Promise` that resolves to `true` when preventing autohiding succeeded and to `false` if the native splash screen is already prevented from autohiding (for instance, if you've already called this method).\n`Promise` rejection most likely means that native splash screen cannot be prevented from autohiding (it's already hidden when this method was executed).\n\n### `SplashScreen.hideAsync()`\n\nHides the native splash screen. Only works if the native splash screen has been previously prevented from autohiding by calling [`SplashScreen.preventAutoHideAsync()`](#splashscreenpreventautohideasync) method.\n\n#### Returns\n\nA `Promise` that resolves to `true` once the splash screen becomes hidden and to `false` if the splash screen is already hidden.\n\n## üóí Examples\n\n### `SplashScreen.preventAutoHideAsync()` in global scope\n\n`App.tsx`\n\n```tsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\n\n// Prevent native splash screen from autohiding before App component declaration\nSplashScreen.preventAutoHideAsync()\n  .then(result => console.log(`SplashScreen.preventAutoHideAsync() succeeded: ${result}`))\n  .catch(console.warn); // it's good to explicitly catch and inspect any error\n\nexport default class App extends React.Component {\n  componentDidMount() {\n    // Hides native splash screen after 2s\n    setTimeout(async () => {\n      await SplashScreen.hideAsync();\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>SplashScreen Demo! üëã</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aabbcc',\n  },\n  text: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n```\n\n### `SplashScreen.preventAutoHideAsync()` in component that initially renders `null`\n\n`App.tsx`\n\n```tsx\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport * as SplashScreen from 'expo-splash-screen';\n\nexport default class App extends React.Component {\n  state = {\n    appIsReady: false,\n  };\n\n  async componentDidMount() {\n    // Prevent native splash screen from autohiding\n    try {\n      await SplashScreen.preventAutoHideAsync();\n    } catch (e) {\n      console.warn(e);\n    }\n    this.prepareResources();\n  }\n\n  /**\n   * Method that serves to load resources and make API calls\n   */\n  prepareResources = async () => {\n    await performAPICalls(...);\n    await downloadAssets(...);\n\n    this.setState({ appIsReady: true }, async () => {\n      await SplashScreen.hideAsync();\n    });\n  }\n\n  render() {\n    if (!this.state.appIsReady) {\n      return null;\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>SplashScreen Demo! üëã</Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aabbcc',\n  },\n  text: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n```\n\n## üíª Installation in managed Expo projects\n\nRefer to [the SplashScreen section of the Expo documentation](https://docs.expo.dev/versions/latest/sdk/splash-screen/).\n\n## üñ• Installation in bare React Native projects\n\nFor bare React Native projects, you must ensure that you have [installed and configured the `expo` package](https://docs.expo.dev/bare/installing-expo-modules/) before continuing.\n\n## Add the package to your dependencies\n\n```\nexpo install expo-splash-screen\n```\n\n## üì± Configure iOS\n\nRun `npx pod-install` after installing the package.\n\n### Automatic configuration\n\nThe easiest way to configure the splash screen in bare React Native projects is with the expo-splash-screen command. See the [README](https://github.com/expo/expo-cli/tree/main/unlinked-packages/configure-splash-screen) for more information, or run `yarn expo-splash-screen --help` in your project.\n\n### Manual Configuration\n\nTo achieve native splash screen (in iOS ecosystem it's called `LaunchScreen`) behavior, you have to provide either a `SplashScreen.storyboard` file or a `SplashScreen.xib` file, and configure your Xcode project accordingly.\n\nThe guide below shows how to configure your Xcode project to use a single image file as a splash screen using a `.storyboard` file (configuration for `.xib` filetype is analogous).\n\n1. [Add an image to `Images.xcassets`](#-add-an-image-to-imagesxcassets)\n2. [Create `SplashScreen.storyboard`](#-create-splashscreenstoryboard)\n3. [Select `Content Mode` for the `ImageView` in `SplashScreen.storyboard`](#-select-content-mode-for-the-imageview-in-splashscreenstoryboard)\n4. [Mark `SplashScreen.storyboard` as the LaunchScreen](#-mark-splashscreenstoryboard-as-the-launchscreen)\n5. [(<em>optional</em>) Enable dark mode](#-optional-enable-dark-mode)\n6. [(<em>optional</em>) Customize StatusBar](#-customize-statusbar)\n\n#### üõ† Add an image to `Images.xcassets`\n\nFirst you need to add the image file that would serve as a splash screen to your native project's resources.\n\n1. In your Xcode project open the `.xcassets` (often named `Images.xcassets` or `Assets.xcassets`) file.\n2. In the content panel add `New image set` and name it `SplashScreen`.\n3. Provide the splash screen image you've prepared (you have to provide it in three different scales).\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addImagesXcassets.png\" height=\"350\" />\n</details>\n\n#### üõ† Create `SplashScreen.storyboard`\n\nThis is the actual splash screen definition and will be used by the system to render your splash screen.\n\n1. Create a `SplashScreen.storyboard` file.\n2. Add a `View Controller` to the newly created `.storyboard` file:\n   - open `Library` (`+` button on the top-right),\n   - find `View Controller` element,\n   - drag-and-drop it to the `.storyboard` file.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addViewControllerToStoryboard.png\" height=\"350\" />\n</details>\n\n3. Add an `Image View` to the `View Controller`:\n   - first remove other `View` element from `View Controller`,\n   - open `Library` (`+` button on the top-right),\n   - find `Image View` element,\n   - drag-and-drop it as a `View Controller` child in view hierarchy inspector.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addImageViewToStoryboard.png\" height=\"350\" />\n</details>\n\n4. Set `Storyboard ID` to `SplashScreenViewController`:\n   - select `View Controller` in view hierarchy inspector,\n   - navigate to `Identity Inspector` in the right panel,\n   - and set `Storyboard ID` to `SplashScreenViewController`.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addStoryboardID.png\" height=\"350\" />\n</details>\n\n5. Tick `Is Initial View Controller` in `SplashScreenViewController`:\n   - select `View Controller` in view hierarchy inspector,\n   - navigate to `Attributes Inspector` in the right panel,\n   - and tick `Is Initial View Controller` in View Controller section.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-tickIsInitialViewController.png\" height=\"350\" />\n</details>\n\n6. Configure `Image View` source:\n   - select `Image View` in view hierarchy inspector,\n   - navigate to `Attributes Inspector` in the right panel,\n   - select `SplashScreen` in `Image` parameter).\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-configureImageView.png\" height=\"350\" />\n</details>\n\n7. Configure `Background` of the `Image View`:\n   - select `Image View` in view hierarchy inspector,\n   - navigate to `Attributes Inspector` in the right panel,\n   - configure `Background` parameter:\n     - To enter a `#RRGGBB` value you need to select `Custom` option and in the `Colors Popup` that appeared you need to navigate to the second tab and choose `RGB Sliders` from dropdown select.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-selectBackgroundColor.png\" height=\"350\" />\n</details>\n\n#### üõ† Select `Content Mode` for the `ImageView` in `SplashScreen.storyboard`\n\nThis is how your image will be displayed on the screen.\n\n1. Open `SplashScreen.storyboard` and select `Image View` from `View Controller`.\n2. Navigate to `Attributes Inspector` in the right panel and locate `Content Mode`.\n3. Select one of the following:\n   - `Aspect Fit` to obtain [CONTAIN resize mode](#contain-resize-mode),\n   - `Aspect Fill` to obtain [COVER resize mode](#cover-resize-mode).\n4. You can always choose other options to achieve different image positioning and scaling.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-selectImageViewContentMode.png\" height=\"350\" />\n</details>\n\n#### üõ† Mark `SplashScreen.storyboard` as the LaunchScreen\n\nThe newly created `SplashScreen.storyboard` needs to be marked as the `Launch Screen File` in your Xcode project in order to be presented from the very beginning of your application launch.\n\n1. Select your project in `Project Navigator`\n2. Select your project name from `TARGETS` panel and navigate to `General` tab.\n3. Locate `App Icons and Launch Images` section and `Launch Screen File` option.\n4. Select or enter `SplashScreen` as the value for located option.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-selectLaunchScreen.png\" height=\"350\" />\n</details>\n\n#### üõ† (<em>optional</em>) Enable dark mode\n\n##### Provide different background colors\n\nDepending on what iOS version your application is targeting, you have to adjust your native project differently to a obtain working per-appearance splash screen view.\n\n##### I'm targeting iOS 11+\n\nYou can take advantage of [`named colors`](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/WhatsNewXcode/xcode_9/xcode_9.html) in your Xcode project.\n\n1. Create a new `Color Set` and customize its values for different color modes:\n   - in your `.xcassets` directory (either create a new `.xcassets` for colors, or reuse an existing one e.g. with images) create `New Color Set` and name it `SplashScreenBackground`,\n   - navigate to `Attributes Inspector` in the right panel and change `Appearance` to `Any, Dark`,\n   - select desired color in `Attributes Inspector` in the right panel for each mode.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-createNamedColor.png\" height=\"350\" />\n</details>\n\n2. Select created `named color` as the `Background` for the `Image View` in `SplashScreen.storyboard`:\n   - open `SplashScreen.storyboard` and select `Image View` in view hierarchy inspector,\n   - navigate to `Attributes Inspector` in the right panel,\n   - configure `Background` parameter by selecting your created `named color` (that should be listed as `SplashScreenBackground`).\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-selectNamedColor.png\" height=\"350\" />\n</details>\n\n##### I'm targeting iOS version < 11\n\nYou cannot use [`named colors`](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/WhatsNewXcode/xcode_9/xcode_9.html) feature in your Xcode project.\nInstead you have to create an additional image set that contains small 1x1px images, each with the desired background color. Then, you'll use this additional image resource as a background in the splash screen view.\n\nYou can use this online generator to obtain 1x1px `.png` images with desired colors: http://www.1x1px.me.\n\n1. Create `SplashScreenBackground` `Image Set` with desired background colors for each mode in your `Images.xcassets` directory:\n   - open your `.xcassets` directory with images,\n   - in the content panel add `New image set` and name it `SplashScreenBackground`,\n   - convert this `Image set` to support `Dark Appearance` by navigating to `Attributes Inspector` in the right panel and changing `Appearance` to `Any, Dark`,\n   - provide images with colors for every mode (you can generate color 1x1px images using http://www.1x1px.me).\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addSplashScreenBackgroundImages.png\" height=\"250\" />\n</details>\n\n2. Update `SplashScreen.storyboard` to consist of a single top-level `View` with two `Image View` subviews (solid-colored image in the background and actual splash screen image in the foreground):\n\n   - open `SplashScreen.storyboard` and replace `Image View` with a plain `View` (search `Library` for it and drag&drop it in place of current `Image View`),\n   - add two\n\n3. Configure first `Image View` (background color):\n   - configure attributes in `Attributes Inspector`:\n     - set `Image` to `SplashScreenBackground` (prepared in previous step),\n     - set `Content Mode` to `Scale To Fill` (color needs to take all available space),\n   - make this subview take all available space in parent view:\n     - open `Add new constraints` bottom menu,\n     - make sure `Constrain to margin` is not checked,\n     - for every input, open the dropdown and select `View` (parent view reference) and set `0` as the value,\n     - once every side is covered (`0` value and parent view reference selected in dropdown) hit `Add 4 Constraints`,\n     - observe that in `View Hierarchy Inspector` constraints are added and `Image View` resized to take whole place of parent view.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-createBackgroundImageView.png\" height=\"350\" />\n</details>\n\n4. Configure second `Image View` (actual splash screen image):\n   - select second `Image View` and select correct `Image` in `Attributes Inspector` alongside with desired `Content Mode`,\n   - make this subview take all available space in parent view (see previous step).\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addConstraintsToImageViews.png\" height=\"350\" />\n</details>\n\n##### Provide different splash screen image\n\nYou might want to add a separate image for `dark` mode. If the system is switched to `dark` mode, it would pick this different image instead of the normal one and present it in the splash screen view.\n\n1. In your Xcode project open `SplashScreen` (created in previous section).\n2. Convert this asset to support `Dark Appearance`:\n\n- navigate to `Attributes Inspector` in the right panel,\n- locate `Appearances` section and select `Any, Dark`,\n- provide image for `dark mode` by dropping it to the correct box.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-addDarkImagesXcassets.png\" height=\"280\" />\n</details>\n\n###### Background color when you want to support iOS < 11\n\nIf you're targeting a version of iOS < 11 then you cannot use `named color` feature and instead you need to generate images with desired background colors that are going to be used as the background for splash screen view.\nThere is this awesome 1x1px png online generator: http://www.1x1px.me (use it to generate two 1x1px images with desired background colors for different color modes).\n\n#### üõ† (<em>optional</em>) Customize StatusBar\n\nYou might want to customize the StatusBar appearance during the time the SplashScreen is being shown.\n\n1. Customize `StatusBar hiding` flag:\n\n- open main project view, select your project name from `TARGETS` panel and navigate to `Info` tab,\n- add or modify `Status bar initially hidden` attribute with desired value.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-statusBar-hidden.png\" height=\"350\" />\n</details>\n\n2. Customize `StatusBar style` option:\n\n- open main project view, select your project name from `TARGETS` panel and navigate to `Info` tab,\n- add or modify `Status bar style` attribute with desired value.\n\n<details>\n <summary>Show image with details</summary>\n<img src=\"./assets/configuration-ios-statusBar-style.png\" height=\"350\" />\n</details>\n\n## ü§ñ Configure Android\n\nTo achieve fully-native splash screen behavior, `expo-splash-screen` needs to be hooked into the native view hierarchy and consume some resources that have to be placed under `/android/app/src/res` directory.\n\n### Automatic configuration\n\nThe easiest way to configure the splash screen in bare React Native projects is with the expo-splash-screen command. See the [README](https://github.com/expo/expo-cli/tree/main/unlinked-packages/configure-splash-screen) for more information, or run `yarn expo-splash-screen --help` in your project.\n\n### Manual Configuration\n\n1. [Configure `res/drawable/splashscreen_image.png`](#-configure-resdrawablesplashscreen_imagepng)\n2. [Configure `res/values/colors.xml`](#-configure-resvaluescolorsxml)\n3. [Configure `res/drawable/splashscreen.xml`](#-configure-resdrawablesplashscreenxml)\n4. [Configure `res/values/styles.xml`](#-configure-resvaluesstylesxml)\n5. [Configure `AndroidManifest.xml`](#-configure-androidmanifestxml)\n6. [(<em>optional</em>) Customzine `resizeMode`](#-optional-customize-resizemode)\n7. [(<em>optional</em>) Enable dark mode](#-optional-enable-dark-mode-1)\n8. [(<em>optional</em>) Customize StatusBar](#-customize-statusbar-1)\n\n#### üõ† Configure `res/drawable/splashscreen_image.png`\n\nYou have to provide your splash screen image and place it under the `res/drawable` directory.\nThis image will be loaded as soon as Android mounts your application's native view hierarchy.\n\n##### `NATIVE` mode adjustments\n\nIf you've overridden `<string name=\"expo_splash_screen_resize_mode\">native</string>` mode in [`res/values/strings.xml`](#-optional-customize-resizemode), you need to do a few additional steps.\n\nIn your application's `res` directory you might want to have a number of `drawable-X` sub-directories (where `X` is the different DPI for different devices). They store different versions of images that are picked based on the device's DPI (for more information please see [this official Android docs](https://developer.android.com/training/multiscreen/screendensities#TaskProvideAltBmp)).\n\nTo achieve proper scaling of your splash screen image on every device you should have following directories:\n\n- `res/drawable-mdpi` - scale 1x - resources for medium-density (mdpi) screens (~160dpi). (This is the baseline density.)\n- `res/drawable-hdpi` - scale 1.5x - resources for high-density (hdpi) screens (~240dpi).\n- `res/drawable-xhdpi` - scale 2x - resources for extra-high-density (xhdpi) screens (~320dpi).\n- `res/drawable-xxhdpi` - scale 3x - resources for extra-extra-high-density (xxhdpi) screens (~480dpi).\n- `res/drawable-xxxhdpi` - scale 4x - resources for extra-extra-extra-high-density (xxxhdpi) uses (~640dpi).\n\nEach of directories mentioned above should contain the same `splashscreen_image.png` file, but with a different resolution (pay attention to scale factors).\n\n#### üõ† Configure `res/values/colors.xml`\n\nThis file contains colors that are reused across your application at the native level.\nUpdate the file with the following content or create one if missing:\n\n```diff\n<resources>\n+ <color name=\"splashscreen_background\">#AABBCC</color> <!-- #AARRGGBB or #RRGGBB format -->\n  <!-- Other colors defined for your application -->\n</resources>\n```\n\n#### üõ† Configure `res/drawable/splashscreen.xml`\n\nThis file contains the description of how the splash screen view should be drawn by the Android system.\nCreate the file with the following content:\n\n```diff\n+ <layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+   <item android:drawable=\"@color/splashscreen_background\"/>\n+ </layer-list>\n```\n\n#### `NATIVE` mode adjustments\n\nIf you've overridden `<string name=\"expo_splash_screen_resize_mode\">native</string>` mode in [`res/values/strings.xml`](#-optional-customize-resizemode), you shoulw add:\n\n```diff\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n  <item android:drawable=\"@color/splashscreen_background\"/>\n+ <item>\n+   <bitmap android:gravity=\"center\" android:src=\"@drawable/splashscreen_image\"/>\n+ </item>\n</layer-list>\n```\n\n#### üõ† Configure `res/values/styles.xml`\n\nLocate your main activity theme in `/android/app/src/res/values/styles.xml` or create one if missing.\n\n```diff\n  <!-- Main activity theme. -->\n  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n+   <item name=\"android:windowBackground\">@drawable/splashscreen</item> <!-- this line instructs the system to use 'splashscreen.xml' as a background of the whole application -->\n    <!-- Other style properties -->\n  </style>\n```\n\n#### üõ† Configure `AndroidManifest.xml`\n\nAdjust your application's main `AndroidManifest.xml` to contain an `android:theme` property pointing to the style that contains your splash screen configuration:\n\n```diff\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.myapp\">\n\n  ...\n\n  <application ...>\n\n+   <!-- Ensure that 'android:theme' property is pointing to the style containing native splash screen reference - see 'styles.xml' -->\n    <activity\n      android:name=\".MainActivity\"\n+     android:theme=\"@style/AppTheme\"\n      ...\n    >\n      ...\n    </activity>\n  </application>\n\n</manifest>\n```\n\n#### üõ† (<em>optional</em>) Customize `resizeMode`\n\nThe default image [`resizeMode`](https://github.com/expo/expo/tree/%40kudo/modularize-expo-splash-screen/packages/expo-splash-screen#built-in-splash-screen-image-resize-modes) is [`CONTAIN`](https://github.com/expo/expo/tree/%40kudo/modularize-expo-splash-screen/packages/expo-splash-screen#contain-resize-mode). If you want to have different `resizeMode`, you need to override in `res/values/strings.xml`.\n\n```diff\n--- a/android/app/src/main/res/values/strings.xml\n+++ b/android/app/src/main/res/values/strings.xml\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <resources>\n   <string name=\"app_name\">sdk42</string>\n+  <string name=\"expo_splash_screen_resize_mode\">contain|cover|native</string>\n</resources>\n```\n\n#### üõ† (<em>optional</em>) Enable dark mode\n\n##### Provide different background colors - `res/values-night/colors.png`\n\nIf you want to have different background colors in your splash screen depending on the system color mode, you need to create a similar file to `colors.xml`, but in the directory `res/values-night`.\nValues in this file are going to picked by the system when it is switched to `dark` mode.\n\n```diff\n<resources>\n+ <color name=\"splashscreen_background\">#AABBCC</color> <!-- #AARRGGBB or #RRGGBB format -->\n</resources>\n```\n\n##### Provide different splash screen image - `res/drawable-night/splashscreen_image.png`\n\nYou might want to provide a separate splash screen image for dark mode usage, and place it under the `res/drawable-night` directory with exactly the same name as the normal one.\nThis step is optional, because you might want to have the same image in both `light` and `dark` modes (e.g. you have just a light-themed logo and you want to have different background colors in different modes).\n\n#### üõ† (<em>optional</em>) Customize StatusBar\n\nYou might want to customize the StatusBar appearance during the time the SplashScreen is being shown.\n\n1. Customize `StatusBar hiding` flag\n\nTo have the StatusBar completely hidden you need to update your `res/values/styles.xml` file with the following entry (to prevent StatusBar from hiding either remove this entry or enter `false` as the value):\n\n```diff\n  <!-- Main/SplashScreen activity theme. -->\n  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+   <item name=\"android:windowFullscreen\">true</item>\n    <!-- Other style properties -->\n  </style>\n```\n\nIf you have multiple `styles.xml` files located in different directories containing exactly the same `style` entry (e.g. in `res/values-night`, `res/values-night-v23`, etc.), be sure to update these files accordingly.\n\nRead more about `android:windowFullscreen` flag in [official Android documentation](https://developer.android.com/reference/android/R.attr#windowFullscreen).\n\n2. Customize `StatusBar style` option\n\nThis option is only available for Android devices running Android 6.0 or greater.\nTo enforce `light` or `dark` StatusBar style for given system color mode, you have to prepare or update your `res/values-v23/styles.xml` file with the following entry (as of this option being supported since API 23, you have to configure specifically named directory containing separate configuration files):\n\n```diff\n  <!-- Main/SplashScreen activity theme. -->\n  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+   <item name=\"android:windowLightStatusBar\">true|false</item>\n    <!-- Other style properties -->\n  </style>\n```\n\nAvailable values:\n\n- `true` for having dark-colored icons,\n- `false` for having light-colored icons.\n\nIf you have multiple `styles.xml` files located in different directories containing exactly the same `style` entry (e.g. in `res/values-night-v23` (for dark color mode), etc.), be sure to update these files accordingly.\n\nRead more about `android:windowLightStatusBar` flag in [official Android documentation](https://developer.android.com/reference/android/R.attr#windowLightStatusBar).\n\nTo read more about Android multi-API-level support see [this official documentation](https://developer.android.com/guide/topics/resources/providing-resources).\n\n3. Customize `StatusBar color` option (a.k.a. `background color` of the StatusBar component)\n\nTo achieve custom background color you need to create a new color resource and provide it to the SplashScreen `style` description.\n\nCreate new color resource in your `res/values/colors.xml` (if your application supports dark mode, consider adding different color in `res/values-night/colors.xml` file):\n\n```diff\n  <resources>\n    <!-- Below line is handled by '@expo/configure-splash-screen' command and it's discouraged to modify it manually -->\n    <color name=\"splashscreen_background\">#D0D0C0</color>\n+   <color name=\"splashscreen_statusbar_color\">#(AA)RRGGBB</color> <!-- #AARRGGBB or #RRGGBB format -->\n  </resources>\n```\n\nUpdate your `res/values/styles.xml` file with the following entry:\n\n```diff\n  <!-- Main/SplashScreen activity theme. -->\n  <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\n    <item name=\"android:windowBackground\">@drawable/splashscreen</item>\n+   <item name=\"android:statusBarColor\">@color/splashscreen_statusbar_color</item>\n    <!-- Other style properties -->\n  </style>\n```\n\nIf you have multiple `styles.xml` files located in different directories containing exactly the same `style` entry (e.g. in `res/values-night`, `res/values-night-v23`, etc.), be sure to update these files accordingly.\n\nRead more about `android:statusBarColor` option in [official Android documentation](https://developer.android.com/reference/android/R.attr#statusBarColor).\n\n4. Customize `StatusBar translucent` flag\n\nWhen the StatusBar is translucent, the app will be able to draw under the StatusBar component area.\n\nTo make the StatusBar translucent update your `res/values/strings.xml` file with the following content:\n\n```diff\n--- a/android/app/src/main/res/values/strings.xml\n+++ b/android/app/src/main/res/values/strings.xml\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <resources>\n   <string name=\"app_name\">sdk42</string>\n+  <string name=\"expo_splash_screen_status_bar_translucent\">true</string>\n</resources>\n```\n\n## üëè Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide](https://github.com/expo/expo#contributing).\n\n## ‚ùì Known issues\n\n### iOS caching\n\nSplash Screens on iOS apps can sometimes encounter a caching issue where the previous image will flash before showing the new, intended image. When this occurs, we recommend you try power cycling your device and uninstalling and re-installing the application. However, the caching sometimes can persist for a day or two so be patient if the aforementioned steps were unable to resolve the issue.\n\n### `NATIVE` mode pushes splash image up a little bit\n\nSee [`NATIVE`](#native-resize-mode) mode preview above.\n\n> We are aware of this issue and unfortunately haven't been able to provide a solution as of yet. This is on our immediate roadmap...\n\n## ‚¨ÜÔ∏è Migrate from old versions\n\n### Migrate from expo-splash-screen < 0.12.0\n\nWe try to keep changes backward compatible, the code for `expo-splash-screen` will still work as it used to be. However, if you are going to migrate as new style API, here are the steps:\n\n1. Migrate your project from react-native-unimodules to expo-modules-core\n2. Remove expo-splash-screen code from MainActivity\n\n```diff\n--- a/android/app/src/main/java/com/helloworld/MainActivity.java\n+++ b/android/app/src/main/java/com/helloworld/MainActivity.java\n import com.facebook.react.ReactRootView;\n import com.swmansion.gesturehandler.react.RNGestureHandlerEnabledRootView;\n\n-import expo.modules.splashscreen.singletons.SplashScreen;\n-import expo.modules.splashscreen.SplashScreenImageResizeMode;\n-\n public class MainActivity extends ReactActivity {\n   @Override\n   protected void onCreate(Bundle savedInstanceState) {\n     // This is required for expo-splash-screen.\n     setTheme(R.style.AppTheme);\n     super.onCreate(null);\n-    // SplashScreen.show(...) has to be called after super.onCreate(...)\n-    // Below line is handled by '@expo/configure-splash-screen' command and it's discouraged to modify it manually\n-    SplashScreen.show(this, SplashScreenImageResizeMode.CONTAIN, ReactRootView.class, false);\n   }\n```\n\n3. Override default `resizeMode` and `statusBarTranslucent` in stings.xml\n\n```diff\n--- a/android/app/src/main/res/values/strings.xml\n+++ b/android/app/src/main/res/values/strings.xml\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n <resources>\n   <string name=\"app_name\">sdk42</string>\n+  <string name=\"expo_splash_screen_resize_mode\">contain</string>\n+  <string name=\"expo_splash_screen_status_bar_translucent\">false</string>\n</resources>\n```\n\n## üèÖ Hall Of Fame\n\nThis module is based on a solid work from (many thanks for that üëè):\n\n- [react-native-splash-screen](https://github.com/crazycodeboy/react-native-splash-screen)\n- [react-native-bootsplash](https://github.com/zoontek/react-native-bootsplash)\n- [react-native-make](https://github.com/bamlab/react-native-make)",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo-status-bar@1.4.4": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "650 Industries, Inc.",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-status-bar",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo-status-bar/README.md",
        "licenseText": "# expo-status-bar\n\nProvides the same interface as the React Native [StatusBar API](https://reactnative.dev/docs/statusbar), but with slightly different defaults to work great in Expo environments.\n\n- Default to `translucent={true}` on Android.\n- The `style=\"auto\"` maps to a dark status bar when in light mode and a light status bar when in dark moded. `style=\"inverted\"` inverts this behavior.\n\n# API documentation\n\n- [Documentation for the main branch](https://github.com/expo/expo/blob/main/docs/pages/versions/unversioned/sdk/status-bar.mdx)\n- [Documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/status-bar/)\n\n# Installation in managed Expo projects\n\nFor [managed](https://docs.expo.dev/versions/latest/introduction/managed-vs-bare/) Expo projects, please follow the installation instructions in the [API documentation for the latest stable release](https://docs.expo.dev/versions/latest/sdk/image/). If you follow the link and there is no documentation available then this library is not yet usable within managed projects &mdash; it is likely to be included in an upcoming Expo SDK release.\n\nPlease refer to the [React Native StatusBar API documentation](https://reactnative.dev/docs/statusbar).\n\n# Installation in bare React Native projects\n\n```\nnpm install expo-status-bar\n```\n\n### Configure for iOS\n\nRun `npx pod-install` after installing the npm package.\n\n### Configure for Android\n\nNo additional setup necessary.\n\n# Contributing\n\nContributions are very welcome! Please refer to guidelines described in the [contributing guide](https://github.com/expo/expo#contributing).",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "expo@48.0.10": {
        "licenses": "MIT",
        "repository": "https://github.com/expo/expo",
        "publisher": "Expo",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/expo/README.md",
        "licenseText": "# expo\n\nThe `expo` package is a single package you can install in any React Native app to begin using Expo modules.\n\n- includes core infrastructure for Expo modules: `expo-modules-core` and `expo-modules-autolinking`.\n- bundles a minimal set of Expo modules that are required by nearly every app, such as `expo-asset`.\n- provides [`@expo/cli`](https://github.com/expo/expo/blob/main/packages/%40expo/cli/README.md), a small CLI that provides a clean interface around both bundlers (such as Metro and Webpack) and native build tools (Xcode, Simulator.app, Android Studio, ADB, etc.), can generate native projects with `npx expo prebuild`, and aligns compatible package versions with `npx expo install`.\n- exposes a JavaScript module that configures an app at runtime as needed to use `expo-font` and to function in Expo Go (optional, only if applicable).\n\nSee [CONTRIBUTING](./CONTRIBUTING.md) for instructions on working on this package.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "moment@2.29.4": {
        "licenses": "MIT",
        "repository": "https://github.com/moment/moment",
        "publisher": "Iskren Ivov Chernev",
        "email": "iskren.chernev@gmail.com",
        "url": "https://github.com/ichernev",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/moment",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/moment/LICENSE",
        "licenseText": "Copyright (c) JS Foundation and other contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.",
        "copyright": "Copyright (c) JS Foundation and other contributors",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "observador@4.0.15": {
        "licenses": "UNLICENSED",
        "private": true,
        "path": "/home/alexandre/Documents/workspaces/observador-rn",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-icomoon@2.5.7": {
        "licenses": "MIT",
        "repository": "https://github.com/aykutkardas/react-icomoon",
        "publisher": "Aykut Karda≈ü",
        "email": "aykutkrds@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-icomoon",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-icomoon/LICENCE",
        "licenseText": "MIT License\n\nCopyright (c) 2020 Aykut Karda≈ü <aykutkrds@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2020 Aykut Karda≈ü <aykutkrds@gmail.com>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-animated-spinkit@1.5.2": {
        "licenses": "MIT",
        "repository": "https://github.com/tienphaw/react-native-animated-spinkit",
        "publisher": "Tien Pham",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-animated-spinkit",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-animated-spinkit/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2019 Tien Pham\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2019 Tien Pham",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-autoheight-webview@1.6.5": {
        "licenses": "ISC",
        "repository": "https://github.com/iou90/react-native-autoheight-webview",
        "publisher": "iou90",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-autoheight-webview",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-autoheight-webview/LICENSE",
        "licenseText": "ISC License (ISC)\n\nCopyright 2017 iou90\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\nTHIS SOFTWARE.",
        "copyright": "Copyright 2017 iou90",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-background-fetch@4.1.9": {
        "licenses": "MIT",
        "repository": "https://github.com/transistorsoft/react-native-background-fetch",
        "publisher": "Chris Scott, Transistor Software",
        "email": "chris@transistorsoft.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-background-fetch",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-background-fetch/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Transistor Software\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2016 Transistor Software",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-bouncy-checkbox@3.0.7": {
        "licenses": "MIT",
        "repository": "https://github.com/WrathChaos/react-native-bouncy-checkbox",
        "publisher": "Kuray",
        "email": "kurayogun@gmail.com",
        "url": "FreakyCoder",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-bouncy-checkbox",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-bouncy-checkbox/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2019 FreakyCoder\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2019 FreakyCoder",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-carplay@2.1.0": {
        "licenses": "MIT",
        "repository": "https://github.com/birkir/react-native-carplay",
        "publisher": "Birkir Gudjonsson",
        "email": "birkir.gudjonsson@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-carplay",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-carplay/README.md",
        "licenseText": "# CarPlay with React Native\n\nWhat if you could create CarPlay with React Native. Well, now you can.\n\n![Animated Demo](https://media.giphy.com/media/Ffa4hukA3YMLh6U8fl/giphy.gif)\n\n## Discord Channel\n\nCome join us on our discord channel: https://discord.gg/b235pv6QHM\n\n## Support\n\nThis version of `react-native-carplay` supports iOS 14. If you need support for versions before this please refer to version 1.3.1 of this package.\n\n## CarPlay Entitlement and XCode Project Setup\n\n#### Read this section if you are new to CarPlay!\n\nOne of the most useful resources for undertanding the requirements, constraints and capabilities of CarPlay apps is the official [App Programming Guidelines](https://developer.apple.com/carplay/documentation/CarPlay-App-Programming-Guide.pdf) from Apple. It's a 50-page document that clearly lays out steps required and you are strongly encouraged to read it if you are new to CarPlay. Further to the above guide, when developing a CarPlay app or if contributing to this package; you'll find the [CarPlay Documentation](https://developer.apple.com/documentation/carplay?language=objc) invaluable.\n\n_You can develop CarPlay capabilities with this project without waiting for Apple to send you back an entitlement, through the simulator._\n\nIf you want to build and run your app on an iPhone or share it with others through the App Store Connect or TestFlight, you will need to request a CarPlay entitlement from Apple first. The process will take anywhere from a few days to weeks - your mileage will vary. This depends on the type of Entitlement you are requesting. If you are part of the MFi program, this may help speed things up too. You then need to add the entitlement to your provisioning profile or signing certificate that you use for signing your app in XCode.\n\nYou can go to [this Apple CarPlay entitlement request page](https://developer.apple.com/contact/carplay/) to request a CarPlay Entitlement. You need to be logged in with an Apple Developer account.\n\nTo start a CarPlay simulator in XCode, within the Simulator window, go to the menu option IO, click on External Displays, then select CarPlay.\n\n#### NB:\n\nWhether you are running through a simulator or building the app for distribution, you need to ensure that the correct entitlement key is added in your `Entitlements.plist` file. If you don't have an Entitlements.plist file, create one in your `iOS/` directory.\n\n## Installing\n\n1. Install the library\n\n```bash\nyarn add react-native-carplay --save\n```\n\n2. Link using normal or cocoapods method\n\n```bash\nreact-native link react-native-carplay\n```\n\n```ruby\n# in ios/Podfile:\n\npod 'react-native-carplay', path: '../node_modules/react-native-carplay'\n```\n\n3. Edit your AppDelegate\n\n```objc\n// AppDelegate.h\n\n// [step 1] add this line to the top\n#import <CarPlay/CarPlay.h>\n\n// [step 2] add the \"CPApplicationDelegate\" to the end, before \">\":\n@interface AppDelegate : UIResponder <UIApplicationDelegate, CPApplicationDelegate>\n```\n\n```objc\n// AppDelegate.m\n\n// [step 1] add this line to the top\n#import <RNCarPlay.h>\n\n// ...\n\n// [step 2] add the following two methods before @end\n\n- (void)application:(UIApplication *)application didConnectCarInterfaceController:(CPInterfaceController *)interfaceController toWindow:(CPWindow *)window {\n  [RNCarPlay connectWithInterfaceController:interfaceController window:window];\n}\n\n- (void)application:(nonnull UIApplication *)application didDisconnectCarInterfaceController:(nonnull CPInterfaceController *)interfaceController fromWindow:(nonnull CPWindow *)window {\n  [RNCarPlay disconnect];\n}\n\n@end\n```\n\n## Basic Usage\n\n[See full example](https://github.com/birkir/react-native-carplay/blob/master/example/src/App.tsx)\n\nThe exported `CarPlay` class gives you the API needed to add / remove templates from the CarPlay view hierarchy.\n\n```jsx\nimport { CarPlay, GridTemplate } from 'react-native-carplay';\n\nconst template = new GridTemplate({\n  title: 'Hello, World',\n  buttons: [],\n});\n\nCarPlay.setRootTemplate(template);\n```\n\n## Connect / Disconnect\n\nWhen working with CarPlay it is important to detect and respond to the connect / disconnect events. The CarPlay class provides both a `connected` boolean and an on connect / disconnect event you can register a callback to.\n\nWhen you are creating and displaying a template within your existing app screens you may want to ensure CarPlay is connected before calling any carplay apis. This can be done within a `useEffect`.\n\n```jsx\nuseEffect(() => {\n  function onConnect() {\n    // Do things now that carplay is connected\n  }\n\n  function onDisconnect() {\n    // Do things now that carplay is disconnected\n  }\n\n  CarPlay.registerOnConnect(onConnect);\n  CarPlay.registerOnDisconnect(onDisconnect);\n\n  return () => {\n    CarPlay.unregisterOnConnect(onConnect);\n    CarPlay.unregisterOnDisconnect(onDisconnect);\n  };\n});\n```\n\n## CarPlay API\n\n### CarPlay.setRootTemplate\n\nSets the root template of CarPlay.\nThis must be called before running any other CarPlay commands. Can be called multiple times.\n\n```tsx\nCarPlay.setRootTemplate(template, /* animated */ false);\n```\n\n### CarPlay.pushTemplate\n\nPushes a new template to the navigation stack.\n**Note** you cannot push the same template twice.\n\n```tsx\nCarPlay.pushTemplate(template, /* animated */ true);\n```\n\n### CarPlay.popTemplate\n\nPop currently presented template from the stack.\n\n```tsx\nCarPlay.popTemplate(/* animated */ false);\n```\n\n### CarPlay.popToTemplate\n\nPop currently presented template from the stack to a specific template. The template must be in the stack.\n\n```tsx\nCarPlay.popToTemplate(template, /* animated */ false);\n```\n\n### CarPlay.popToRoot\n\nPop the stack to root template.\n\n```tsx\nCarPlay.popToRoot(/* animated */ false);\n```\n\n## Templates\n\nTemplates are used to render contents on the CarPlay screen from your app. Details of the templates supported by apple can be found in the [developer guide](https://developer.apple.com/carplay/documentation/CarPlay-App-Programming-Guide.pdf)\n\n### MapTemplate\n\n![Map Template](.github/mapTemplateRoutes.png)\n![Map Template](.github/mapTemplateNavigation.png)\n\n```jsx\nimport { CarPlay } from 'react-native-carplay';\n\nconst mapTemplate = new MapTemplate({\n  component: /* react native view */ MapView,\n  onAlertActionPressed(e) {\n    console.log(e);\n  },\n  onStartedTrip({ tripId, routeIndex }) {\n    // start your navigation code\n    onStartNavigation(routeIndex);\n  },\n});\n\nCarPlay.setRootTemplate(mapTemplate);\n```\n\n### ListTemplate\n\n![List Template](.github/listTemplate.png)\n\n```jsx\nimport { CarPlay } from 'react-native-carplay';\n\nconst listTemplate = new ListTemplate({\n  sections: [],\n  title: 'List Template',\n  async onItemSelect({ index }) {\n    // use the selected index\n    setSelected(index);\n  },\n});\n\nCarPlay.pushTemplate(listTemplate, true);\n```\n\n### InformationTemplate\n\n![Information Template](.github/informationTemplate.png)\n\n```jsx\nimport { CarPlay } from 'react-native-carplay';\n\nconst informationTemplate = new InformationTemplate({\n  title: 'Information',\n  items: [],\n  actions: [{ id: 'x', title: 'demo' }],\n  onActionButtonPressed({ id }) {\n    // id of button pressed\n    console.log('pressed', id);\n  },\n});\n\nCarPlay.pushTemplate(informationTemplate);\n```\n\n### GridTemplate\n\n![Grid Template](.github/gridTemplate.png)\n\n```jsx\nimport { CarPlay } from 'react-native-carplay';\n\nconst gridTemplate = new GridTemplate({\n  trailingNavigationBarButtons: [],\n  buttons: [\n    {\n      id: 'List',\n      titleVariants: ['List'],\n      image: listImage,\n    },\n    {\n      id: 'Grid',\n      titleVariants: ['Grid'],\n      image: gridImage,\n    },\n  ],\n  title: 'Grid Template',\n  onButtonPressed({ id }) {\n    // id of button pressed\n    setSelected(id);\n  },\n  onBarButtonPressed({ id }) {\n    // id of bar button pressed\n    setSelected(id);\n  },\n});\n\nCarPlay.pushTemplate(gridTemplate, true);\n```\n\n### SearchTemplate\n\n![Search Template](.github/searchTemplate.png)\n\n```jsx\nconst searchTemplate = new SearchTemplate({\n  async onSearch(query) {\n    // use the query to search\n    // and return item array\n    return performSearch(query);\n  },\n  async onItemSelect({ index }) {\n    // index of the selected item\n    setSelected(index);\n  },\n  onSearchButtonPressed() {\n    // on search button pressed, should display\n    // list template with results\n    navigation.navigate('List');\n  },\n});\n\nCarPlay.pushTemplate(searchTemplate, true);\n```\n\n### VoiceTemplate\n\n![Voice Template](.github/voiceTemplate.png)\n\nThis template is presented via `CarPlay.presentTemplate`. In order to implement voice recognition, take a look at the [`@react-native-voice/voice`](https://github.com/react-native-voice/voice) package.\n\n```jsx\nconst voiceControlTemplate = new VoiceControlTemplate({\n  // pass the control states\n  voiceControlStates: [\n    {\n      identifier: 'TEST',\n      image: require('../images/cat.jpg'),\n      repeats: true,\n      titleVariants: ['Searching...'],\n    },\n  ],\n});\n\nCarPlay.presentTemplate(voiceControlTemplate, true);\n```\n\n### AlertTemplate\n\n![Alert Template](.github/alertTemplate.png)\n\nThis template is presented via `CarPlay.presentTemplate`.\n\n```jsx\nconst alertTemplate = new AlertTemplate({\n  titleVariants: ['Hello world'],\n  actions: [\n    {\n      id: 'ok',\n      title: 'Ok',\n    },\n    {\n      id: 'remove',\n      title: 'Remove',\n      style: 'destructive',\n    },\n  ],\n  onActionButtonPressed({ id }) {\n    // id of the pressed button\n    if (id === 'remove') {\n      // presentable templates can be\n      // dismissed\n      CarPlay.dismissTemplate();\n    }\n  },\n});\n\nCarPlay.presentTemplate(alertTemplate);\n```\n\n### ActionSheetTemplate\n\n![ActionSheet Template](.github/actionSheetTemplate.png)\n\nThis template is presented via `CarPlay.presentTemplate`.\n\n```jsx\nconst actionSheetTemplate = new ActionSheetTemplate({\n  title: 'Example',\n  message: 'This is an message for you',\n  actions: [\n    {\n      id: 'ok',\n      title: 'Ok',\n    },\n    {\n      id: 'remove',\n      title: 'Remove',\n      style: 'destructive',\n    },\n  ],\n  onActionButtonPressed({ id }) {\n    // the id of the button pressed\n  },\n});\n\nCarPlay.presentTemplate(actionSheetTemplate);\n```\n\n### TabTemplate\n\n![Tab Template](.github/tabTemplate.png)\n\nThis template must be set as the root template and cannot be pushed on top of other templates.\n\n```jsx\nconst template1 = new ListTemplate({\n  sections: [\n    {\n      header: 'Test 1',\n      items: [{ text: 'Hello world 1' }],\n    },\n  ],\n  title: 'AA',\n});\nconst template2 = new ListTemplate({\n  sections: [\n    {\n      header: 'Test 2',\n      items: [{ text: 'Hello world 3' }],\n    },\n  ],\n  title: 'BB',\n});\n\nconst tabBarTemplate = new TabBarTemplate({\n  templates: [template1, template2],\n  onTemplateSelect(e: any) {\n    console.log('selected', e);\n  },\n});\n\nCarPlay.setRootTemplate(tabBarTemplate);\n```\n\n## Example App\n\nA working example app can be found [here](https://github.com/birkir/react-native-carplay/blob/master/example/src/App.tsx).\n\nTo run it you must first install dependencies and pods.\n\n1. install dependencies and build `react-native-carplay`\n\n```bash\nyarn install\n```\n\n2. move to example dir and install dependencies\n\n```bash\ncd example\nyarn install\n```\n\n3. run build dev in root dir, this will copy the output to the examples node modules.\n\n```base\ncd ..\nyarn build:dev\n```\n\n4. install pods in example app and start the metro bundler\n\n```base\ncd example/ios\npod install\nyarn start\n```\n\n5. start xcode and run the project on your simulator or device\n\n## Image Size and Resolution\n\nQuirks observed where PNG image resolutions should be specfied with scale factor of 3.0 (i.e. append with `@3x`) with ListTemplate image sizing suggested around 80 x 80 px per [Issue #6](https://github.com/birkir/react-native-carplay/issues/6)\n\n## Not working / In progress\n\n### UI Elements\n\n- [ ] Contact Template\n- [ ] Now Playing Template\n- [ ] Point of Interest Template\n\n### Getters\n\n- [ ] topTemplate\n- [ ] rootTemplate",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-device-info@10.6.0": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-device-info/react-native-device-info",
        "publisher": "Rebecca Hughes",
        "email": "rebecca@learnium.net",
        "url": "https://github.com/rebeccahughes",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-device-info",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-device-info/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Rebecca Hughes\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015 Rebecca Hughes",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-dynamic-search-bar@2.0.2": {
        "licenses": "MIT",
        "repository": "https://github.com/WrathChaos/react-native-dynamic-search-bar",
        "publisher": "Kuray",
        "email": "kurayogun@gmail.com",
        "url": "FreakyCoder",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-dynamic-search-bar",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-dynamic-search-bar/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2019 FreakyCoder\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2019 FreakyCoder",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-elements@3.4.3": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-elements/react-native-elements",
        "publisher": "Nader Dabit & Monte Thakkar",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-elements",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-elements/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Nader Dabit\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2016 Nader Dabit",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-fbsdk-next@11.2.1": {
        "licenses": "MIT",
        "repository": "https://github.com/thebergamo/react-native-fbsdk-next",
        "publisher": "Marcos B√©rgamo",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-fbsdk-next",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-fbsdk-next/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2021 Marcos B√©rgamo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2021 Marcos B√©rgamo",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-gesture-handler@2.9.0": {
        "licenses": "MIT",
        "repository": "https://github.com/software-mansion/react-native-gesture-handler",
        "publisher": "Krzysztof Magiera",
        "email": "krzys.magiera@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-gesture-handler",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-gesture-handler/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Software Mansion <swmansion.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2016 Software Mansion <swmansion.com>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-google-mobile-ads@8.2.3": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/invertase/react-native-google-mobile-ads",
        "publisher": "Invertase",
        "email": "oss@invertase.io",
        "url": "http://invertase.io",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-google-mobile-ads",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-google-mobile-ads/LICENSE",
        "licenseText": "Apache-2.0 License\n------------------\n\nCopyright (c) 2021-present Invertase Limited <oss@invertase.io>\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this library except in compliance with the License.\n\nYou may obtain a copy of the Apache-2.0 License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nCreative Commons Attribution 3.0 License\n----------------------------------------\n\nCopyright (c) 2016-present Invertase Limited <oss@invertase.io>\n\nDocumentation and other instructional materials provided for this project\n(including on a separate documentation repository or it's documentation website) are\nlicensed under the Creative Commons Attribution 3.0 License. Code samples/blocks\ncontained therein are licensed under the Apache License, Version 2.0 (the \"License\"), as above.\n\nYou may obtain a copy of the Creative Commons Attribution 3.0 License at\n\n    https://creativecommons.org/licenses/by/3.0/",
        "copyright": "Copyright (c) 2021-present Invertase Limited <oss@invertase.io>*",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-iap@12.10.4": {
        "licenses": "MIT",
        "repository": "https://github.com/dooboolab-community/react-native-iap",
        "publisher": "dooboolab",
        "email": "support@dooboolab.com",
        "url": "https://github.com/dooboolab-community",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-iap",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-iap/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2017-2021 dooboolab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017-2021 dooboolab",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-image-zoom-viewer@3.0.1": {
        "licenses": "MIT",
        "repository": "https://github.com/ascoders/react-native-image-viewer",
        "publisher": "ascoders",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-image-zoom-viewer",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-image-zoom-viewer/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 ascoders\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015 ascoders",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-keyboard-aware-scroll-view@0.9.5": {
        "licenses": "MIT",
        "repository": "https://github.com/APSL/react-native-keyboard-aware-scroll-view",
        "publisher": "Alvaro Medina Ballester",
        "email": "me@alvaromb.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-keyboard-aware-scroll-view",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-keyboard-aware-scroll-view/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 APSL\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015 APSL",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-logs@5.0.1": {
        "licenses": "MIT",
        "repository": "https://github.com/onubo/react-native-logs",
        "publisher": "Alessandro Bottamedi - a.bottamedi@me.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-logs",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-logs/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2021 Alessandro Bottamedi.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2021 Alessandro Bottamedi.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-maps@1.4.0": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-maps/react-native-maps",
        "publisher": "Leland Richardson",
        "email": "leland.m.richardson@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-maps",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-maps/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Airbnb\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015 Airbnb",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-modal@13.0.1": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-community/react-native-modal",
        "publisher": "Mazzarolo Matteo",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-modal",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-modal/LICENSE.md",
        "licenseText": "MIT License\n\nCopyright (c) 2017 React Native Community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017 React Native Community",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-oss-license@0.7.0": {
        "licenses": "MIT",
        "repository": "https://github.com/k-tomoyasu/react-native-oss-license",
        "publisher": "k-tomoyasu",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-oss-license",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-oss-license/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2019 k-tomoyasu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2019 k-tomoyasu",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-pager-view@6.2.0": {
        "licenses": "MIT",
        "repository": "https://github.com/callstack/react-native-pager-view",
        "publisher": "troZee",
        "email": "hello@callstack.com",
        "url": "https://github.com/callstack",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-pager-view",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-pager-view/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2021 Callstack\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2021 Callstack",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-parallax-header@1.1.4": {
        "licenses": "ISC",
        "repository": "https://github.com/kyaroru/RNParallax",
        "publisher": "Chiew Carol",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-parallax-header",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-parallax-header/README.md",
        "licenseText": "# RNParallax (react-native-parallax-header)\n[![GitHub stars](https://img.shields.io/github/stars/kyaroru/RNParallax.svg)](https://github.com/kyaroru/RNParallax/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/kyaroru/RNParallax.svg)](https://github.com/kyaroru/RNParallax/network)\n[![GitHub issues](https://img.shields.io/github/issues/kyaroru/RNParallax.svg)](https://github.com/kyaroru/RNParallax/issues)\n\n[![NPM](https://nodei.co/npm/react-native-parallax-header.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/react-native-parallax-header/)\n\n- A react native scroll view component with Parallax header :p\n- Inspired by [GitHub - jaysoo/react-native-parallax-scroll-view](https://github.com/jaysoo/react-native-parallax-scroll-view)\n- Code is based on [React Native ScrollView animated header ‚Äì App & Flow ‚Äì Medium](https://medium.com/appandflow/react-native-scrollview-animated-header-10a18cb9469e) and added little customisation :p\n\n## Installation\n```bash\n$ npm i react-native-parallax-header --save\n```\n## Demo\n### iPhone X or XS (Using `alwaysShowTitle={false}` & `alwaysShowNavBar={false}`)\n![iPhone X](https://i.gyazo.com/24343e2127b8e479a52f4bc5853ef457.gif)\n\n### iPhone X or XS\n![iPhone X](https://i.gyazo.com/b24881b191ce5a69e7de14b7d0bb688e.gif)\n\n### iPhone 8\n![iPhone 8](https://i.gyazo.com/eebeff28c7df7b0233fabb9cf2a9c5dc.gif)\n\n## Example\nRefer to [TestParallax](https://github.com/kyaroru/TestParallax) for working example\n```jsx\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  StatusBar,\n  Dimensions,\n  TouchableOpacity,\n} from 'react-native';\nimport ReactNativeParallaxHeader from 'react-native-parallax-header';\n\nconst {height: SCREEN_HEIGHT} = Dimensions.get('window');\n\nconst IS_IPHONE_X = SCREEN_HEIGHT === 812 || SCREEN_HEIGHT === 896;\nconst STATUS_BAR_HEIGHT = Platform.OS === 'ios' ? (IS_IPHONE_X ? 44 : 20) : 0;\nconst HEADER_HEIGHT = Platform.OS === 'ios' ? (IS_IPHONE_X ? 88 : 64) : 64;\nconst NAV_BAR_HEIGHT = HEADER_HEIGHT - STATUS_BAR_HEIGHT;\n\nconst renderNavBar = () => (\n  <View style={styles.navContainer}>\n    <View style={styles.statusBar} />\n    <View style={styles.navBar}>\n      <TouchableOpacity style={styles.iconLeft} onPress={() => {}}>\n        <Text style={{color: 'white'}}>About</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.iconRight} onPress={() => {}}>\n        <Text style={{color: 'white'}}>Me</Text>\n      </TouchableOpacity>\n    </View>\n  </View>\n);\n\nconst renderContent = () => {\n  return (\n    <View style={styles.body}>\n      {Array.from(Array(30).keys()).map((i) => (\n        <View\n          key={i}\n          style={{padding: 15, alignItems: 'center', justifyContent: 'center'}}>\n          <Text>Item {i + 1}</Text>\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst title = () => {\n  return (\n    <View style={styles.body}>\n      <Text style={{color: 'white', fontSize: 25}}>Parallax Header</Text>\n    </View>\n  );\n};\n\nconst App = () => {\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <ReactNativeParallaxHeader\n        headerMinHeight={HEADER_HEIGHT}\n        headerMaxHeight={250}\n        extraScrollHeight={20}\n        navbarColor=\"#3498db\"\n        titleStyle={styles.titleStyle}\n        title={title()}\n        backgroundImage={require('./bg.png')}\n        backgroundImageScale={1.2}\n        renderNavBar={renderNavBar}\n        renderContent={renderContent}\n        containerStyle={styles.container}\n        contentContainerStyle={styles.contentContainer}\n        innerContainerStyle={styles.container}\n        scrollViewProps={{\n          onScrollBeginDrag: () => console.log('onScrollBeginDrag'),\n          onScrollEndDrag: () => console.log('onScrollEndDrag'),\n        }}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flexGrow: 1,\n  },\n  navContainer: {\n    height: HEADER_HEIGHT,\n    marginHorizontal: 10,\n  },\n  statusBar: {\n    height: STATUS_BAR_HEIGHT,\n    backgroundColor: 'transparent',\n  },\n  navBar: {\n    height: NAV_BAR_HEIGHT,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n  },\n  titleStyle: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n  },\n});\n\nexport default App;\n```\n\n## API Usage\n| Property | Type | Required | Description | Default |\n| -------- | ---- | -------- | ----------- | ------- |\n| `renderNavBar` | `func` | No | This renders the nav bar component | Empty `<View />` |\n| `renderContent` | `func` | **YES** | This renders the scroll view content | - |\n| `headerMaxHeight` | `number` | No | This is the header maximum height | Default to `170` |\n| `headerMinHeight` | `number` | No | This is the header minimum height | Default to common ios & android navbar height (have support for iPhone X too :p) |\n| `backgroundImage` | `image source` | No | This renders the background image of the header (**if specified, background color will not take effect**) | Default to `null` |\n| `backgroundImageScale` | `number` | No | This is the image scale - either enlarge or shrink (after scrolling to bottom & exceed the headerMaxHeight) | Default is `1.5` |\n| `backgroundColor` | `string` | No | This is the color of the parallax background (before scrolling up), **will not be used if `backgroundImage` is specified** | Default color is `#303F9F` |\n| `extraScrollHeight` | `number` | No | This is the extra scroll height (after scrolling to bottom & exceed the headerMaxHeight) | Default is `30` |\n| `navbarColor` | `string` | No | This is the background color of the navbar (after scroll up) | Default color is `#3498db` |\n| `statusBarColor` | `string` | No | This is the status bar color (for android) navBarColor will be used if no statusBarColor is passed in | Default to `null` |\n| `title` | `any` | No | This is the title to be display in the header, can be string or component | Default to `null` |\n| `titleStyle` | `style` | No | This is the title style to override default font size/color | Default to `color: ‚Äòwhite‚Äô `text and `fontSize: 16` |\n| `headerTitleStyle` | `style` | No | This is the header title animated view style to override default `<Animated.View>` style | Default to `null` |\n| `scrollEventThrottle` | `number` | No | This is the scroll event throttle | Default is `16` |\n| `contentContainerStyle` | `style` | No | This is the contentContainerStyle style to override default `<ScrollView>` contentContainerStyle style | Default to null |\n| `containerStyle` | `style` | No | This is the style to override default outermost `<View>` style | Default to null |\n| `scrollViewStyle` | `style` | No | This is the scrollview style to override default `<ScrollView>` style | Default to null |\n| `innerContainerStyle` | `style` | No | This is the inner content style to override default `<View>` style inside `<ScrollView>` component | Default to null |\n| `alwaysShowTitle` | `bool` | No | This is to determine whether show or hide the title after scroll | Default to `true` |\n| `alwaysShowNavBar` | `bool` | No | This is to determine whether show or hide the navBar before scroll | Default to `true` |\n| `scrollViewProps` | `object` | No | This is to override default scroll view properties | Default to `{}` |",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-popup-menu@0.16.1": {
        "licenses": "ISC",
        "repository": "https://github.com/instea/react-native-popup-menu",
        "publisher": "instea.co",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-popup-menu",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-popup-menu/LICENSE",
        "licenseText": "ISC License\n\nCopyright (c) 2016, instea\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
        "copyright": "Copyright (c) 2016, instea",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-reanimated@2.15.0": {
        "licenses": "MIT",
        "repository": "https://github.com/software-mansion/react-native-reanimated",
        "publisher": "Krzysztof Magiera",
        "email": "krzys.magiera@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-reanimated",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-reanimated/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Software Mansion <swmansion.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2016 Software Mansion <swmansion.com>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-recaptcha-that-works@1.3.2": {
        "licenses": "MIT",
        "repository": "https://github.com/douglasjunior/react-native-recaptcha-that-works",
        "publisher": "Douglas Nassif Roma Junior",
        "email": "nassifrroma@gmail.com",
        "url": "http://smarppy.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-recaptcha-that-works",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-recaptcha-that-works/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2020 Douglas Nassif Roma Junior\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2020 Douglas Nassif Roma Junior",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-render-html@6.3.4": {
        "licenses": "BSD-2-Clause",
        "repository": "https://github.com/meliorence/react-native-render-html",
        "publisher": "Meliorence",
        "email": "contact@meliorence.com",
        "url": "github.com/meliorence",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-render-html",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-render-html/README.md",
        "licenseText": "<p align=\"center\">\n  <div align=\"center\">\n    <a href=\"\"\n      ><img\n        src=\"https://img.shields.io/badge/platforms-Android%20%7C%20iOS%20%7C%20MacOs%20%7C%20Windows-brightgreen.svg?colorB=191A17\"\n        alt=\"platforms\"\n    /></a>\n    <a href=\"https://github.com/expo/expo\"\n      ><img\n        src=\"https://img.shields.io/badge/Runs%20with%20Expo-000.svg?style=flat&amp;logo=EXPO&amp;labelColor=ffffff&amp;logoColor=000\"\n        alt=\"runs with expo\"\n    /></a>\n  </div>\n  <div align=\"center\">\n    <a href=\"https://www.npmjs.com/package/react-native-render-html\"\n      ><img\n        src=\"https://img.shields.io/npm/v/react-native-render-html/latest\"\n        alt=\"npm\"\n    /></a>\n    <a href=\"https://www.npmjs.com/package/react-native-render-html\"\n      ><img\n        src=\"https://img.shields.io/npm/v/react-native-render-html/next\"\n        alt=\"npm\"\n    /></a>\n    <a href=\"https://www.npmjs.com/package/react-native-render-html\"\n      ><img\n        src=\"https://img.shields.io/npm/dm/react-native-render-html.svg?colorB=007ec6\"\n        alt=\"npm\"\n    /></a>\n  </div>\n  <div align=\"center\">\n    <a href=\"https://codecov.io/gh/meliorence/react-native-render-html\"\n      ><img\n        src=\"https://img.shields.io/codecov/c/gh/meliorence/react-native-render-html\"\n        alt=\"\"\n    /></a>\n    <a\n      href=\"https://github.com/meliorence/react-native-render-html/actions?query=branch%3Amaster+workflow%3ACI\"\n      ><img\n        src=\"https://github.com/meliorence/react-native-render-html/workflows/CI/badge.svg?branch=master\"\n        alt=\"\"\n    /></a>\n    <a href=\"https://github.com/meliorence/react-native-render-html/issues\"\n      ><img\n        src=\"https://img.shields.io/github/issues/meliorence/react-native-render-html.svg\"\n        alt=\"github issues\"\n    /></a>\n    <a href=\"https://semver.org/spec/v2.0.0.html\"\n      ><img src=\"https://img.shields.io/badge/semver-2.0.0-e10079.svg\" alt=\"\"\n    /></a>\n  </div>\n  <div align=\"center\">\n    <a href=\"https://discord.gg/dbEMMJM\"\n      ><img\n        src=\"https://img.shields.io/discord/736906960041148476?label=discord\"\n        alt=\"\"\n    /></a>\n    <a\n      href=\"https://openbase.com/js/react-native-render-html?utm_source=embedded&amp;utm_medium=badge&amp;utm_campaign=rate-badge\"\n      ><img\n        src=\"https://badges.openbase.com/js/rating/react-native-render-html.svg\"\n        alt=\"Rate on Openbase\"\n    /></a>\n  </div>\n</p>\n<br/>\n<p align=\"center\">\n    <a href=\"https://meliorence.github.io/react-native-render-html/\"><img width=\"124\" height=\"124\" src=\"https://github.com/meliorence/react-native-render-html/raw/master/assets/logo.svg\"></a>\n</p>\n<h1 align=\"center\">react-native-render-html</h1>\n<p align=\"center\">\n  <sup>Based on the original work of <a href=\"https://github.com/Thomas101\">Thomas Beverley</a>, props to him.</sup>\n</p>\n<p align=\"center\">\nAn iOS/Android pure javascript react-native component that renders your HTML into 100% native views.\n</p>\n<p align=\"center\">\n    <a href=\"https://meliorence.github.io/react-native-render-html/blog/2021/06/27/create-blog-app-rnrh-I\"><img width=\"320\" height=\"744\" src=\"https://github.com/meliorence/react-native-render-html/raw/master/assets/demo.gif\"></a>\n</p>\n\n### üóÉÔ∏è Releases\n\n**The Foundry (v6) release is finally stable, and is now-on the recommended\nversion.** [Check out **the announcement blog post** in our brand new\nwebsite](https://meliorence.github.io/react-native-render-html/blog/2021/06/07/foundry-announcement).\nWe also have a [**migration\nguide**](https://meliorence.github.io/react-native-render-html/docs/migration-guide)\nfor those who are coming from v5 and below.\n\n> :warning: **You are on the master branch which is home for the latest development.**\n> Check the table bellow to get documentation for your exact\n> version.\n\n| Minor | Branch                                                                                   | Documentation                                                                                              | Latest                                                                         |\n| ----- | ---------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ |\n| next  | master                                                                                   | -                                                                                                          | [![npm](https://img.shields.io/npm/v/react-native-render-html/next)](#)        |\n| 6.3   | [release/6.3](https://github.com/meliorence/react-native-render-html/tree/release/6.3)   | [Official Website](https://meliorence.github.io/react-native-render-html/)                                 | [![npm](https://img.shields.io/npm/v/react-native-render-html/release/6.3)](#) |\n| 5.1¬†¬† | [release/5.1](https://github.com/meliorence/react-native-render-html/tree/release/5.1)¬†¬† | [release/5.1/README.md](https://github.com/meliorence/react-native-render-html/blob/release/5.1/README.md) | [![npm](https://img.shields.io/npm/v/react-native-render-html/release/5.1)](#) |\n| 4.2¬†¬† | [release/4.2](https://github.com/meliorence/react-native-render-html/tree/release/4.2)¬†¬† | [release/4.2/README.md](https://github.com/meliorence/react-native-render-html/blob/release/4.2/README.md) | [![npm](https://img.shields.io/npm/v/react-native-render-html/release/4.2)](#) |\n\n<a name=\"prereleases\"></a>\n\n## :computer: Install\n\n```bash\nnpm install react-native-render-html\n```\n\n```bash\nyarn add react-native-render-html\n```\n\n## :speedboat: Basic Usage\n\n```jsx\nimport React from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport RenderHtml from 'react-native-render-html';\n\nconst source = {\n  html: `\n<p style='text-align:center;'>\n  Hello World!\n</p>`\n};\n\nexport default function App() {\n  const { width } = useWindowDimensions();\n  return (\n    <RenderHtml\n      contentWidth={width}\n      source={source}\n    />\n  );\n}\n```\n\n## :blue_book: Documentation\n\nSee our [official website](https://meliorence.github.io/react-native-render-html/) and [the official Discovery App](https://expo.io/@jsamr/react-native-render-html-discovery).\n\n## :iphone: Example\n\nYou like to learn by example? We have a tutorial from which the demo GIF has been extracted: [A WebView-free Blog App with React Native Render HTML](https://meliorence.github.io/react-native-render-html/blog/2021/06/27/create-blog-app-rnrh-I).\n\n## :notebook: Changelog\n\nThe changelog is available here: [packages/render-html/CHANGELOG.md](https://github.com/meliorence/react-native-render-html/blob/master/packages/render-html/CHANGELOG.md).\n\n## :bulb: Help\n\nPlease refer to [our dedicated document](https://github.com/meliorence/react-native-render-html/blob/master/HELP.adoc).\n\n## üë• Community\n\nYou're always welcome to join our [discord channel](https://discord.gg/dbEMMJM) :-).\n\n## :pencil: Contributing\n\nCheck-out our [contributing guide](https://github.com/meliorence/react-native-render-html/blob/master/CONTRIBUTING.adoc).\n\n- You can report bugs in [our Issue Tracker](https://github.com/meliorence/react-native-render-html/issues);\n- We handle Feature Requests [in our Canny board](https://native-html.canny.io/features).\n\n## :blue_heart: Sponsorship\n\nWant to support this project or hire us to implement a feature? [Check out this page](https://github.com/sponsors/jsamr).\n\n## :balance_scale: License\n\nThe source code is licensed under BSD 2-Clause \"Simplified\" License.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-safe-area-context@4.5.1": {
        "licenses": "MIT",
        "repository": "https://github.com/th3rdwave/react-native-safe-area-context",
        "publisher": "Janic Duplessis",
        "email": "janicduplessis@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-safe-area-context",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-safe-area-context/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2019 Th3rd Wave\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2019 Th3rd Wave",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-screens@3.20.0": {
        "licenses": "MIT",
        "repository": "https://github.com/software-mansion/react-native-screens",
        "publisher": "Krzysztof Magiera",
        "email": "krzys.magiera@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-screens",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-screens/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2018 Software Mansion <swmansion.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2018 Software Mansion <swmansion.com>",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-shared-group-preferences@1.1.23": {
        "licenses": "MIT",
        "repository": "https://github.com/KjellConnelly/react-native-shared-group-preferences",
        "publisher": "Kjell Connelly",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-shared-group-preferences",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-shared-group-preferences/README.md",
        "licenseText": "# react-native-shared-group-preferences\n\n## Too Lazy to Test Locally. Make sure to install from NPM as the github version is currently under testing.\n\n## What is this Module for?\nYou have multiple React-Native apps for iOS or Android and want them to be able to share data in a centralized location on the user's device. For example, you have a series of RPG games where all of your apps share the same gold currency. So if in app #1, the user beats the game, they will have a ton of gold. So when the user downloads the next game, they will be able to still use this gold. Cool huh?\n\n#### To Know\n- Doesn't work for Expo since this uses native code.\n- iOS & Android ONLY\n- Uses Xcode's Shared Preferences App Groups (iOS) and Public External Storage for Android.\n- Once you install via npm, you will need to do some configuration in Xcode for your javascript to access a shared group container. Android will need Permissions.\n- I tried to model this after React Native's AsyncStorage. Main thing is that you no longer need to do JSON.stringify and JSON.parse when you set/get. Not sure why they make you do that to begin with... but you can set/get an JSONable item using this module.\n- All methods return a promise. So make sure to make your functions async.\n- iOS's data is securely sandboxed within your app group. I couldn't find something as easy to access, or that wouldn't be deleted if you delete an app, so the Android version saves a json file to the android device's external storage. This is good because if the app is deleted, another app can still access the data. But this is bad because any other app can delete/edit/access this file. For this reason, at least for Android, do not store data in it that is sensitive. If you're saving user preferences, fine. But do not save something like credit card numbers or anything like that in here. That would be irresponsible. The file is saved to the user's storage in the following format: ```$storage/$appGroupIdentifier/data.json```. So make sure your appGroupIdentifier is a valid folder name. Reverse dns works fine.\n- Also note that if you are using Public Storage (which is done by default) for Android, you must set all data with each save as the key is irrelevant currently. Think of it as having one key/value pair, and that is it. To have multiple key/values, you must set the value as a new javascript object: ```{}```. Then when you ```setItem()```, you must set everything you want to save as ```getItem()``` will only retrieve the one object that can be saved. This is because all data is saved as a single JSON file for Android.\n\n\n#### TODO:\n1) ~~Write iOS Version~~ DONE\n2) ~~Write Android Version~~ DONE\n3) Double check this works in the app I'm working on.\n4) Celebrate\n\n## Getting started\n\n##### Install Latest Github Version\n`$ npm i git+https://git@github.com/kjellconnelly/react-native-shared-group-preferences.git`\n\n##### Install Latest Stable NPM Version\n`$ npm i react-native-shared-group-preferences`\n\n### Mostly automatic installation\n\n##### New Way (with pod for iOS)\n`$ cd ios && pod install && cd ../`\n\n##### Old Way (for ios and android)\n`$ react-native link react-native-shared-group-preferences`\n\n## API\n *set/get basic key/value pairs*\n- SharedGroupPreferences.setItem(string:key, any:value, string:appGroupIdentifier, (optional)object:options)\n- SharedGroupPreferences.getItem(string:key, string:appGroupIdentifier, (optional)object:options)\n\n## Usage\n```javascript\nimport SharedGroupPreferences from 'react-native-shared-group-preferences'\n\nconst appGroupIdentifier = \"group.com.mytest\"\nconst userData = {\n  name: \"Vin Diesel\",\n  age: 34,\n  friends: [\n    \"Lara Croft\",\n    \"Mike Meyers\"\n  ]\n}\n\nexport default class app extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: undefined\n    }\n\n    // Not the most professional way to ask for permissions: Just ask when the app loads.\n    // But for brevity, we do this here.\n    if (Platform.OS == 'android') {\n      this.dealWithPermissions()\n    } else {\n      this.saveUserDataToSharedStorage(userData)\n    }\n  }\n\n  async dealWithPermissions() {\n    try {\n      const grantedStatus = await PermissionsAndroid.requestMultiple([\n        PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE,\n        PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE\n      ])\n      const writeGranted = grantedStatus[\"android.permission.WRITE_EXTERNAL_STORAGE\"] === PermissionsAndroid.RESULTS.GRANTED\n      const readGranted = grantedStatus[\"android.permission.READ_EXTERNAL_STORAGE\"] === PermissionsAndroid.RESULTS.GRANTED\n      if (writeGranted && readGranted) {\n        this.saveUserDataToSharedStorage(userData)\n      } else {\n        // You can either limit the user in access to the app's content,\n        // or do a workaround where the user's data is saved using only\n        // within the user's local app storage using something like AsyncStorage\n        // instead. This is only an android issue since it uses read/write external storage.\n      }\n    } catch (err) {\n      console.warn(err)\n    }\n  }\n\n  async saveUserDataToSharedStorage(data) {\n    try {\n      await SharedGroupPreferences.setItem(\"savedData\", data, appGroupIdentifier)\n      this.loadUsernameFromSharedStorage()\n    } catch(errorCode) {\n      // errorCode 0 = There is no suite with that name\n      console.log(errorCode)\n    }\n  }\n\n  async loadUsernameFromSharedStorage() {\n    try {\n      const loadedData = await SharedGroupPreferences.getItem(\"savedData\", appGroupIdentifier)\n      this.setState({username:loadedData.name})\n    } catch(errorCode) {\n      // errorCode 0 = no group name exists. You probably need to setup your Xcode Project properly.\n      // errorCode 1 = there is no value for that key\n      console.log(errorCode)\n    }\n  }\n\n  render() {\n    return (\n      <View>\n        <Text>\n          {this.state.username ? \"Loading...\" : \"Welcome back \" + this.state.username}\n        </Text>\n      </View>\n    )\n  }\n}\n\n```\n\n## iOS Xcode Prep Work\nIn Xcode, open your Target and click the ```Capabilities``` tab. Go down to ```App Groups```. Add a preexisting identifier or create a new one. Do the same for all the apps that you plan to have a shared container for. Use this identifier for ```appGroupIdentifier``` when you call the javascript functions.\n\n## Android Prep Work (incomplete)\n\n#### External Storage (public storage, any app can access/modify)\nYou need Android Permissions for READ & WRITE External Storage. You can get permission using React Native's ```PermissionsAndroid``` module. How you ask for Permissions is up to you, but can be accomplished like in the example above. Android API 23+ needs you to ask for permissions within the app itself. Below 23 and you can just add these permissions your ```AndroidManifest.xml``` file. For all versions, you will still need to add these to your manifest. Just you will also need to ask for it in 23+.\n```\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n\n#### External Storage *GOTCHA*\n\nSince writing this module in maybe 2018, and only testing it with SDK Version 28 and below, it has come to my attention that `Public External Storage` is deprecated in version 29. Nevertheless, if your device targets 29, you can still use external storage my modifying your `AndroidManifest.xml` file. This is a temporary work around so that all users (even those with 30+) can use this library's ability to access/write public external storage. However, I believe in August of 2021, all new apps submitted to Google Play must target SDK 30 or above to upload new builds. So for now, I am giving this temporary work around until I find a solution for SDK30+.\n\n1. Open `../android/app/src/main/AndroidManifest.xml` and add `android:requestLegacyExternalStorage=\"true\"`\n``` xml\n<!-- example -->\n<manifest ...>\n  <application\n    ...\n    android:requestLegacyExternalStorage=\"true\">\n```\n2. Open `../android/build.gradle` and make sure targetSdkVersion is 29 or below. If you target 30+, the added `android:requestLegacyExternalStorage=\"true\"` will be ignored. So public external storage will only work for 28 and below. But if you target 29, public external storage will work for all devices.\n``` gradle\nbuildscript {\n    ext {\n        ...\n        targetSdkVersion = 29\n    }\n```\n\n*Note* Since public external storage is being deprecated, if you use this library, you may have to find a work around to transitioning the public storage file(s) you create using this library somewhere else. I am currently working on (as of Feb 2021) on using `Content Providers`. I am not sure if this solution will work, but I figure I can support my buggy apps for the next few months by requesting legacy external storage for now. If this solution works, I hope to create a solution where data instantly will be copied from public external storage if there is no data in the content provider, and then use content provider exclusively after that.\n\n#### Shared Preferences (internal app storage)\n\nSome users may want to use Android `SharedPreferences` instead of Public External Storage. This has the benefit of not having to add the above Permissions prep work. For instance, if you use an extension, you may prefer this. Or maybe you add some settings that I don't know about where SharedPreferences will work for you. If this is the case, just add an optional Options object to the end of your calls like this:\n```javascript\ntry {\n  const loadedData = await SharedGroupPreferences.getItem(\"savedData\", appGroupIdentifier, {useAndroidSharedPreferences:true})\n  this.setState({username:loadedData.name})\n} catch(errorCode) {\n  console.log(errorCode)\n}\n```\nor\n```javascript\n  try {\n    await SharedGroupPreferences.setItem(\"savedData\", data, appGroupIdentifier, {useAndroidSharedPreferences:true})\n    this.loadUsernameFromSharedStorage()\n  } catch(errorCode) {\n    // errorCode 0 = There is no suite with that name\n    console.log(errorCode)\n  }\n```\nOptions are optional and currently only affect Android. No changes are needed to your code if you want your code to keep working as it did before updating to the current version.\n\n\n## Extras because I'm Lazy\nI've added extra functionality to this module that isn't related because it's it's a pain creating a new npm module and setting everything up.\n\n```javascript\n  // This Android only script lets you check if another app is installed based on package name. The example below is for Facebook.\n  const facebookPackageName = \"com.facebook.android\"\n  try {\n    const installed = await SharedGroupPreferences.isAppInstalledAndroid(facebookPackageName)\n    console.log(\"Facebook is installed on this device\")\n  } catch (err) {\n    console.log(\"Facebook is not installed\")\n  }\n```",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-spinkit@1.5.1": {
        "licenses": "MIT*",
        "repository": "https://github.com/maxs15/react-native-spinkit",
        "publisher": "Maxime Mezrahi",
        "email": "maxime.mezrahi@gmail.com",
        "url": "https://github.com/maxs15",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-spinkit",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-spinkit/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2016 Maxime Mezrahi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2016 Maxime Mezrahi",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-svg@13.9.0": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-community/react-native-svg",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-svg",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-svg/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) [2015-2016] [Horcrux]\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) [2015-2016] [Horcrux]",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-tab-view@3.5.1": {
        "licenses": "MIT",
        "repository": "https://github.com/react-navigation/react-navigation",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-tab-view",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-tab-view/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2017 React Native Community\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2017 React Native Community",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-toast-notifications@3.3.1": {
        "licenses": "MIT",
        "publisher": "Alireza Rezania",
        "email": "alireza.rzna@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-toast-notifications",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-toast-notifications/LICENSE",
        "licenseText": "MIT License\r\n\r\nCopyright (c) 2020 Alireza Rezania\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
        "copyright": "Copyright (c) 2020 Alireza Rezania",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-track-player@3.2.0": {
        "licenses": "Apache-2.0",
        "repository": "https://github.com/doublesymmetry/react-native-track-player",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-track-player",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-track-player/LICENSE",
        "licenseText": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-use-websocket@0.2.6": {
        "licenses": "MIT",
        "repository": "https://github.com/Sumit1993/react-native-use-websocket",
        "publisher": "Sumit Patel",
        "email": "sumitpatel.14may@gmail.com",
        "url": "https://github.com/Sumit1993",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-use-websocket",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-use-websocket/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2020 Sumit Patel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2020 Sumit Patel",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-uuid@2.0.1": {
        "licenses": "MIT",
        "repository": "https://github.com/eugenehp/react-native-uuid",
        "publisher": "Eugene Hauptmann",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-uuid",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-uuid/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2016-2021 Eugene Hauptmann\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2016-2021 Eugene Hauptmann",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-vector-icons@9.2.0": {
        "licenses": "MIT",
        "repository": "https://github.com/oblador/react-native-vector-icons",
        "publisher": "Joel Arvidsson",
        "email": "joel@oblador.se",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-vector-icons",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-vector-icons/LICENSE",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Joel Arvidsson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015 Joel Arvidsson",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-watch-connectivity@1.1.0": {
        "licenses": "MIT",
        "repository": "https://github.com/mtford90/react-native-watch-connectivity",
        "publisher": "Michael Ford",
        "email": "mtford@gmail.com",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-watch-connectivity",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-watch-connectivity/LICENSE.md",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2019 Michael Ford\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2019 Michael Ford",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-webview@12.0.2": {
        "licenses": "MIT",
        "repository": "https://github.com/react-native-webview/react-native-webview",
        "publisher": "Jamon Holmgren",
        "email": "jamon@infinite.red",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-webview",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-webview/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2015-present, Facebook, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015-present, Facebook, Inc.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native-youtube-iframe@2.2.2": {
        "licenses": "MIT",
        "repository": "https://github.com/LonelyCpp/react-native-youtube-iframe",
        "publisher": "Ananthu P Kanive",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-youtube-iframe",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native-youtube-iframe/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2020 Ananthu Kanive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2020 Ananthu Kanive",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-native@0.70.8": {
        "licenses": "MIT",
        "repository": "https://github.com/facebook/react-native",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-native/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) Meta Platforms, Inc. and affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) Meta Platforms, Inc. and affiliates.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-navigation-backhandler@2.0.1": {
        "licenses": "MIT",
        "repository": "https://github.com/vonovak/react-navigation-backhandler",
        "publisher": "Vojtech Novak",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-navigation-backhandler",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-navigation-backhandler/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) 2018 Vojtech Novak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2018 Vojtech Novak",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react-redux@8.0.5": {
        "licenses": "MIT",
        "repository": "https://github.com/reduxjs/react-redux",
        "publisher": "Dan Abramov",
        "email": "dan.abramov@me.com",
        "url": "https://github.com/gaearon",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-redux",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react-redux/LICENSE.md",
        "licenseText": "The MIT License (MIT)\r\n\r\nCopyright (c) 2015-present Dan Abramov\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
        "copyright": "Copyright (c) 2015-present Dan Abramov",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "react@18.1.0": {
        "licenses": "MIT",
        "repository": "https://github.com/facebook/react",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/react/LICENSE",
        "licenseText": "MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) Facebook, Inc. and its affiliates.",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    },
    "redux@4.2.1": {
        "licenses": "MIT",
        "repository": "https://github.com/reduxjs/redux",
        "path": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/redux",
        "licenseFile": "/home/alexandre/Documents/workspaces/observador-rn/node_modules/redux/LICENSE.md",
        "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-present Dan Abramov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "copyright": "Copyright (c) 2015-present Dan Abramov",
        "errno": -2,
        "syscall": "open",
        "code": "ENOENT"
    }
}
